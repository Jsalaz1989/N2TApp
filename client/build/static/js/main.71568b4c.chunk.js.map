{"version":3,"sources":["theme.js","svgLogo.js","Routes/LandingPage.js","helpers/validations.js","Routes/Auth/BaseAuthForm.jsx","helpers/fetch.js","Routes/Auth/LoginForm.jsx","Routes/Auth/LogoutForm.jsx","Routes/Auth/RegisterForm.jsx","Routes/Auth/RegisterConf.jsx","Routes/Auth/ResetForm.jsx","Routes/Auth/ResetConf.jsx","Routes/PrivateRoute.jsx","Routes/Home.jsx","Routes/Build/ItemTypes.js","Gates/Nand.js","Routes/Build/ComponentsDrawer.jsx","Gates/Node.js","Routes/Build/WireHelpers.js","Routes/Build/WireFuncs.js","Routes/Build/GateHelpers.js","Routes/Build/BuildContext.js","Routes/Build/GateFuncs.js","Routes/Build/DnD/DragPreview.js","Routes/Build/DnD/ItemTypes.js","Routes/Build/DnD/Source.js","Routes/Build/DnD/Wire.js","Routes/Build/DnD/TargetFuncs.js","Routes/Build/DnD/Target.js","Routes/Build/DnD/DnDApp.js","Routes/Build/BuildFuncs.js","Routes/Build/Build.jsx","serviceWorker.js","index.js","App.js"],"names":["theme","createMuiTheme","typography","fontFamily","palette","type","primary","light","main","dark","contrastText","secondary","overrides","MuiTab","root","textDecoration","wrapper","color","MuiAppBar","colorPrimary","backgroundColor","position","boxShadow","zIndex","marginBottom","MuiDialog","paper","width","opacity","MuiDialogTitle","textAlign","MuiDrawer","paddingBottom","top","MuiListItemIcon","MuiButton","MuiIconButton","sizeSmall","padding","gateStyle","fill","fillOpacity","fillRule","stroke","gateStrokeWidth","textStrokeWidth","textFontSize","textFontWeight","strokeLinecap","strokeLinejoin","strokeOpacity","strokeMiterlimit","strokeDasharray","Logo","style","pathStyle","strokeWidth","mlns","height","viewBox","d","id","x","y","href","transform","LandingPage","styles","header","minHeight","display","flexDirection","alignItems","justifyContent","headerTitle","fontSize","textShadow","headerSubtitle","headerButton","logo","animation","pointerEvents","animationTextContent","animationPlayState","window","location","pathname","headerAboutMe","marginTop","createdStyleTag","document","createElement","textContent","body","appendChild","NavButton","to","text","Button","component","NavLink","validatePassword","value","error","test","BaseAuthForm","props","useState","search","focusField","setFocusField","showPassword","setShowPassword","timeouts","validateOnTimeout","setFieldTouched","field","timeout","timeoutId","setTimeout","push","clearTimeouts","timeoutsArray","i","length","clearTimeout","Fields","iconButtonDisabled","cursor","iconButtonEnabled","icon","helpIcon","GridContainerProps","spacing","InputFieldProps","TextField","helperText","margin","EmailFieldProps","name","label","validate","userMustExist","undefined","console","log","ms","Promise","resolve","then","a","fetch","method","headers","response","json","data","userExists","validateEmail","onFocus","PasswordFieldProps","InputProps","endAdornment","InputAdornment","IconButton","onClick","Icon","helpText","Tooltip","title","placement","history","values","email","Grid","container","item","autoFocus","alternateButton","submitCount","isSubmitting","Submit","ButtonProps","size","disabled","isValid","submitForm","variant","CircularProgress","submitButtonText","DialogProps","open","fullWidth","maxWidth","onBackdropClick","Dialog","DialogTitle","done","titleAfter","titleBefore","DialogContent","DialogContentText","textAfter","textBefore","initialValues","replace","password","isInitialValid","onSubmit","actions","render","formikProps","onBlur","nextAfterDone","fetchPost","url","handleResponse","JSON","stringify","LoginForm","setIsAuthenticated","passwordCheck","setSubmitting","userLoggedIn","localStorage","setItem","reload","setFieldError","LogoutForm","logoutUser","removeItem","RegisterForm","emailSent","setEmailSent","userRegistered","RegisterConf","ResetForm","resetEmailSent","ResetConf","PrivateRoute","Component","isAuthenticated","rest","getItem","Home","div","circle","levels","flexGrow","FormRow","Fragment","xs","Paper","thickness","evt","BODY","CENTER","CHIP_IN","CHIP_OUT","FLOATING_WIRE","GATE","GATE_IN","GATE_OUT","NAND","NODE","NODE_CENTER","TEXT","WIRE","BOX","CSV","ItemTypes","terminalColors","setTerminalColors","highlight","terminalId","newTerminalColors","className","cx","cy","r","x1","y1","x2","y2","onMouseOver","onMouseOut","fontWeight","ComponentsDrawer","setShift","setOpen","zero","expanded","setExpanded","drawerWidth","closed","chapter","drawerHeader","left","borderBottomStyle","borderBottomWidth","borderBottomColor","img","Image","svgString","renderToStaticMarkup","xmlns","divWrap","blob","Blob","URL","createObjectURL","src","addEventListener","revokeObjectURL","once","bottom","Typography","Drawer","BackdropProps","invisible","onClose","tabIndex","role","onKeyDown","overflow","justify","List","ListItem","button","key","ListItemText","overflowX","draggable","onDragStart","target","dataTransfer","setData","setDragImage","handleDragStart","Divider","map","index","terminalColor","setTerminalColor","includes","getTerminalPoint","terminal","svg","element","p","createSVGPoint","ctm","getCTM","matrixTransform","getRelativeXY","baseVal","getElementById","getMousePosition","CTM","getScreenCTM","touches","clientX","e","clientY","f","getTerminalType","terminalType","createFloatingWire","wires","setWires","setFloatingWire","from","newFloatingWireName","existingWireAtIn","wireIds","Object","keys","terminalConnected","forEach","wireId","wireTerminals","split","fromId","fromPoint","toPoint","newFloatingWire","connectedToProvider","terminalIds","some","getConnectedTerminals","connectedTerminals","connectedTerminal","getNetwork","network","connectedTerminalId","networkContainsProvider","containsProvider","networkPoint","getNextName","gateType","gates","currentNumber","highestNumber","gate","Number","toString","addChipTerminalNodePoint","chipTerminalId","chipInTerminal","terminalBbox","getBoundingClientRect","right","pt","svgP","inverse","translation","addNewChipTerminalNode","inOuts","newGates","inOut","chipNodePoint","ChipInsContext","createContext","ChipOutsContext","GatesContext","WiresContext","FloatingWireContext","SelectedElementContext","defaultChipIns","defaultChipOuts","defaultGates","Nand0","rotation","Nand1","defaultWires","BuildContextProvider","chipIns","setChipIns","chipOuts","setChipOuts","setGates","floatingWire","selectedElement","setSelectedElement","useEffect","wireChanges","toId","wireChange","$merge","update","updateWires","inputs","outputs","addChipTerminalNode","Provider","children","draggedGateStyle","currentOffset","parentElement","angle","overlaySvgStyle","svgBbox","paperBbox","borderWidth","borderStyle","borderColor","borderRadius","gateTypes","Node","Nand","DragLayer","monitor","itemType","getItemType","getSourceClientOffset","isDragging","Gate","useContext","connectedWires","draggedWires","gateId","getConnectedWires","newWires","bboxGate","diff","moveConnectedWires","withDragPreview","boxSource","beginDrag","canDrag","DragSource","connect","connectDragSource","dragSource","hideSourceOnDrag","selected","filterUnits","result","in","dx","dy","stdDeviation","in2","mode","filter","creatingNode","setCreatingNode","strokeColor","setStrokeColor","handleDrop","preventDefault","getData","mousePos","addGate","handleDoubleClick","newRotation","rotateGate","addNode","handleMouseMove","dragFloatingWire","handleMouseUp","sourceTerminalId","sourceNetwork","sourceNetworkContainsProvider","targetTerminalId","targetNetwork","targetNetworkContainsProvider","floatingWireNameParts","newWireId","newWirePoints","connectFloatingWire","boxTarget","drop","delta","getDifferenceFromInitialOffset","Math","round","moveBox","DropTarget","connectDropTarget","dropTarget","isOver","onDrop","onDoubleClick","onMouseDown","handleMouseDown","onMouseMove","onMouseUp","Wire","backend","MouseBackEnd","handleDragOver","addRemoveChipTerminal","chipInOuts","setChipInOuts","incDec","newChipInOuts","numInOuts","chipInOutsType","chipInOutsName","connectedTo","chipInOutName","shift","marginLeft","paddingTop","Row","columns","newSelectedElement","handleClick","keyCode","keyId","handleKeyDown","md","TerminalHeadings","direction","Inputs","handleMouseUpIn","inputName","floatingWireName","newChipIns","Outputs","Terminals","child","inputValue","setInputValue","TerminalValues","numInputs","Input","inputProps","maxLength","onChange","val","isBool","isEmpty","validateInputs","outputsVals","numOutputs","concat","readOnly","SaveButton","PlayButton","useMemo","onDragOver","DnDApp","Boolean","hostname","match","ReactDOM","CssBaseline","tabValue","setTabValue","tabGroup1","tabGroup2","AppBar","Toolbar","Tabs","event","Tab","Link","exact","path","align","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71568b4c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n// import * as Colors from '@material-ui/core/colors';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n\ttypography: {\r\n        // useNextVariants: true,\r\n        // fontFamily: \"'Segoe', sans-serif\",\r\n        fontFamily: 'Roboto',\r\n\t},\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t\tprimary: {\r\n\t\t\tlight: '#b596c5',\r\n            main: '#2a2a2a',\r\n            // main: '#3a3a3a',\r\n\t\t\tdark: '#424242',\r\n\t\t\tcontrastText: '#ffffff',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tlight: '#ffcccb',\r\n\t\t\tmain: '#b596c5',\r\n\t\t\tdark: '#ba6b6c',\r\n\t\t\tcontrastText: '#000000',\r\n        },\r\n    },\r\n    overrides: {\r\n        MuiTab: { \r\n            root: {\r\n                '&:hover': {\r\n                    textDecoration: 'none',\r\n                },\r\n            },\r\n            wrapper: {\r\n                '&:hover': {\r\n                    color: 'white',\r\n                },\r\n            },\r\n        },\r\n        MuiAppBar: {\r\n            colorPrimary: {\r\n                backgroundColor: 'rgba(0, 0, 0, 0)',\r\n                position: 'static',\r\n                // minHeight: 'auto',\r\n                boxShadow: 'none',\r\n                zIndex: 9999,\r\n                marginBottom: 13\r\n            },\r\n        },\r\n        MuiDialog: {\r\n            paper: {\r\n                width: '500px',\r\n                opacity: '0.9',\r\n                backgroundColor: '#2a2a2a',\r\n                color: 'white'\r\n                // fullWidth: 'true',\r\n                // maxWidth: 'sm',\r\n            },\r\n        },\r\n        MuiDialogTitle: {\r\n            root: {\r\n                textAlign: 'center',\r\n                color: '#b596c5',\r\n                zIndex: 999,\r\n            },\r\n        },\r\n        MuiDrawer: {\r\n            root: {\r\n                position: 'absolute',\r\n\r\n            },\r\n            paper: {\r\n                width: 240,\r\n                // marginTop: 85, //85\r\n                // paddingTop: 85,\r\n                // position: 'absolute',\r\n                paddingBottom: 100,\r\n                // top: '10',\r\n                top: '85px',\r\n\r\n\r\n            },\r\n        },\r\n        MuiListItemIcon: {\r\n            root: {\r\n                top: '0',\r\n                position: 'static',\r\n            },\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                color: '#b596c5',\r\n            }\r\n        },\r\n        // MuiDivider: {\r\n        //     root: {\r\n        //       marginTop: 1,\r\n        //     },\r\n        // },\r\n        MuiIconButton: {\r\n            // root: {\r\n            //     padding: 0,\r\n            // },            \r\n            sizeSmall: {\r\n                padding: 0,\r\n            },\r\n        },\r\n    },\r\n})\r\n\r\n//TODO: figure out which keys are never used\r\nconst gateStyle = {\r\n    fill: theme.palette.primary.light, \r\n    fillOpacity: '0.75', \r\n    fillRule: 'evenodd', \r\n    stroke: '#000000', \r\n    gateStrokeWidth: '3',\r\n    textStrokeWidth: '1', \r\n    textFontSize: '10', \r\n    textFontWeight: '100',\r\n    strokeLinecap: 'square', \r\n    strokeLinejoin: 'miter', \r\n    strokeOpacity: '1', \r\n    strokeMiterlimit: '4', \r\n    strokeDasharray: 'none'\r\n}\r\n\r\n\r\nexport { theme, gateStyle }","import React from 'react'\r\n\r\nconst Logo = ({ style }) => {\r\n\r\n    const pathStyle  = {\r\n        fill: style.fill, \r\n        fillOpacity: '0.75', \r\n        fillRule: 'evenodd', \r\n        stroke: '#000000', \r\n        strokeWidth: '12', \r\n        strokeLinecap: 'square', \r\n        strokeLinejoin: 'miter', \r\n        strokeOpacity: '1', \r\n        strokeMiterlimit: '4', \r\n        strokeDasharray: 'none'\r\n    }\r\n    \r\n    return (\r\n        <svg style={style} mlns=\"http://www.w3.org/2000/svg\" width='400' height='400' viewBox=\"0 0 400 400\">\r\n            <path\r\n                style={pathStyle}\r\n                d=\"M 50,51 L 130,51\"\r\n                id=\"path1316\"\r\n            />\r\n            <use\r\n                x=\"0\"\r\n                y=\"0\"\r\n                href=\"#path1316\"\r\n                id=\"use1318\"\r\n                transform=\"translate(0,78)\"\r\n                width=\"500\"\r\n                height=\"180\" \r\n            />\r\n            <use\r\n                x=\"0\"\r\n                y=\"0\"\r\n                href=\"#path1316\"\r\n                id=\"use2208\"\r\n                transform=\"translate(270.5757,39)\"\r\n                width=\"500\"\r\n                height=\"180\" \r\n            />         \r\n            <path\r\n                style={pathStyle}\r\n                d=\"M 207,171 L 135.7,170.99994 L 135.7,12.499996 L 207.46,12.49997 C 246.3576,12.499945 278.3,48.003958 278.3,91.749974 C 278.3,135.49599 246.3576,171 207,171 z\"\r\n            />        \r\n            <path\r\n                style={pathStyle}\r\n                transform=\"translate(12.90989,-0.353527)\"\r\n                d=\"M 305.47014 89.843887 A 20.152544 20.152544 0 1 1  265.16505,89.843887 A 20.152544 20.152544 0 1 1  305.47014 89.843887 z\"\r\n            />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Logo","import React from 'react'\r\n\r\nimport { theme } from '../theme' \r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logo from '../svgLogo';\r\n\r\n\r\nconst LandingPage = () => {\r\n\r\n    const styles = {\r\n\t\theader: {\r\n\t\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\t\tminHeight: '60vh',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t},\r\n\t\theaderTitle: {\r\n\t\t\tfontSize: 'calc(14px + 2vmin)',\r\n\t\t\ttextShadow: '-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black',\r\n\t\t},\r\n\t\theaderSubtitle: {\r\n\t\t\tfontSize: 'calc(6px + 2vmin)',\r\n\t\t},\r\n\t\theaderButton: {\r\n\t\t\tcolor: theme.palette.primary.light,\r\n\t\t},\r\n\t\tlogo: {\r\n\t\t\tanimation: 'App-logo-spin infinite 20s linear',\r\n\t\t\theight: '30vmin',\r\n\t\t\tpointerEvents: 'none',\r\n\t\t\tanimationTextContent: '@keyframes App-logo-spin { from{transform: rotate(0deg);} to{transform: rotate(360deg);} }',\r\n            fill: theme.palette.primary.light,\r\n            animationPlayState: window.location.pathname === '/' ? 'running' : 'paused'\r\n\t\t},\r\n\t\theaderAboutMe: {\r\n\t\t\tfontSize: 'calc(1px + 2vmin)',\r\n\t\t\tmarginTop: '110px',\r\n\t\t},\r\n    }\t\r\n\r\n    var createdStyleTag = document.createElement(\"style\");\r\n\tcreatedStyleTag.textContent = styles.logo.animationTextContent\r\n\tdocument.body.appendChild(createdStyleTag);\r\n\r\n    const NavButton = ({ to, text }) => {\r\n        return <Button style={styles.headerButton} component={NavLink} to={to}>{text}</Button>;\r\n    }\r\n\r\n    \r\n    return (\r\n        <header style={styles.header}>\r\n            <Logo style={styles.logo}/>\r\n            <p style={styles.headerTitle}>\r\n                Welcome to the <code>Nand2Tetris</code> App \r\n            </p>\r\n            <p style={styles.headerSubtitle}>\r\n                Please <NavButton to='/login' text='Log In'/> or <NavButton to='/register' text='Register'/> \r\n            </p>\r\n            <p style={styles.headerAboutMe}>\r\n                And if you so choose, you may learn a little bit <NavButton to='/about' text='About Me'/>\r\n            </p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default LandingPage","export const validateEmail = (value, userMustExist) => {\r\n\r\n    let error\r\n    if (!value)\r\n        error = 'Required'\r\n    else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value))\r\n        error = 'Invalid email address'\r\n    \r\n    if (error !== undefined)\r\n        return error\r\n\r\n    console.log('Checking database for user')\r\n    const wait = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n    return wait(0).then(async () => {\r\n                \r\n        await fetch('http://127.0.0.1:5000/checkUserExists', {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: value,\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n                if (!userMustExist && data.userExists)\r\n                    error = 'User already exists'\r\n                else if (userMustExist && !data.userExists)\r\n\t\t\t\t\terror = 'User not found' \r\n\r\n                throw error\r\n            })\r\n    })\r\n}\r\n\r\n\r\nexport const validatePassword = (value) => {\r\n\r\n    let error\r\n    if (!value)\r\n        error = 'Required'\r\n    else if (value && !/^(?=.*\\d)(?=.*[a-zA-Z])(?!.*\\s).{6,12}$/i.test(value))\r\n        error = 'Must be alphanumeric and 6-8 characters'\r\n    \r\n    return error\r\n}\r\n\r\nexport const validateConfirmation = (confirmationValue, passwordValue) => {\r\n\r\n    console.log('confirmationValue = ', confirmationValue)\r\n    console.log('passwordValue = ', passwordValue)\r\n\r\n    let error\r\n    if (!confirmationValue)\r\n        error = 'Required'\r\n    else if (confirmationValue && confirmationValue !== passwordValue)\r\n        error = 'Passwords must match'\r\n    \r\n    console.log('error = ', error)\r\n    \r\n    return error\r\n}","import React, { useState, Fragment } from 'react'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport { TextField } from 'formik-material-ui'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport Lock from '@material-ui/icons/Lock'\r\nimport Help from '@material-ui/icons/Help'\r\n\r\n\r\nimport { validateEmail, validatePassword } from '../../helpers/validations'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\n\r\n\r\n\r\nconst BaseAuthForm =  (props) => {\r\n\r\n\tconst [focusField, setFocusField] = useState(window.location.search === '' ? 'email' : 'password')\r\n\tconst [showPassword, setShowPassword] = useState(false)\r\n\r\n\tlet timeouts = []\r\n\tfunction validateOnTimeout(setFieldTouched, field, timeout) {\r\n\t\tconst setFieldTouchedCallback = () => setFieldTouched(field)\r\n\t\tlet timeoutId = setTimeout(setFieldTouchedCallback, timeout)\r\n\t\ttimeouts.push(timeoutId)\r\n\t}\r\n\r\n\tfunction clearTimeouts(timeoutsArray) {\r\n\t\tfor (let i = 0; i < timeoutsArray.length; i++)\r\n\t\t\tclearTimeout(timeoutsArray[i])\r\n\t}\r\n\r\n\tconst Fields = ( props ) => {\r\n\r\n\t\tconst styles = {\r\n\t\t\ticonButtonDisabled: {\r\n\t\t\t\tcursor: 'default',\r\n\t\t\t},\r\n\t\t\ticonButtonEnabled: {\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t},\r\n\t\t\ticon: {\r\n\t\t\t\twidth: '15', \r\n\t\t\t\theight: 'auto',\r\n\t\t\t},\r\n\t\t\thelpIcon: {\r\n\t\t\t\tcolor: 'red',\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tconst GridContainerProps = {\r\n\t\t\tspacing: 16,\r\n\t\t\talignItems: 'center',\r\n\t\t}\r\n\r\n\t\tconst InputFieldProps = {\r\n\t\t\tcomponent: TextField,\r\n\t\t\thelperText: ' ',\r\n\t\t\tmargin: \"dense\",\r\n\t\t}\r\n\r\n\t\tconst EmailFieldProps = {\r\n\t\t\t...InputFieldProps,\r\n\t\t\tname: \"email\",\r\n\t\t\ttype: \"email\",\r\n\t\t\tlabel: \"Email\",\r\n\t\t\tvalidate: (value) => validateEmail(value, props.userMustExist),\r\n\t\t\tonFocus: () => validateOnTimeout(props.setFieldTouched, 'email', 5000),\r\n\t\t}\r\n\r\n\t\tconst PasswordFieldProps = {\r\n\t\t\t...InputFieldProps,\r\n\t\t\tname: \"password\",\r\n\t\t\ttype: showPassword ? 'text' : 'password',\r\n\t\t\tlabel: \"Password\",\r\n\t\t\tvalidate: validatePassword,\r\n\t\t\tInputProps: {\r\n\t\t\t\tendAdornment: (\r\n\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t<IconButton\tonClick={()=>setShowPassword(!showPassword)}>\r\n\t\t\t\t\t\t\t{showPassword ? <Visibility style={styles.icon} /> : <VisibilityOff style={styles.icon} />}\r\n\t\t\t\t\t\t</IconButton>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\tonFocus: () => validateOnTimeout(props.setFieldTouched, 'password', 5000),\r\n\t\t}\r\n\r\n\t\tconst Icon = ({ icon, helpText }) => {\r\n\t\t\treturn(\r\n\t\t\t\t<Tooltip title={helpText} placement=\"left\">\r\n\t\t\t\t\t{icon !== 'help' ? \r\n\t\t\t\t\t\t<IconButton style={styles.iconButtonDisabled}>\r\n\t\t\t\t\t\t\t{icon === 'email' && <AccountCircle style={styles.icon} />}\r\n\t\t\t\t\t\t\t{icon === 'password' && <Lock style={styles.icon} />}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<IconButton style={styles.iconButtonEnabled} onClick={()=> props.history.push('/reset?email='+props.values.email)}>\r\n\t\t\t\t\t\t\t<Help style={{...styles.icon, ...styles.helpIcon}} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Tooltip>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Grid container {...GridContainerProps}>\r\n\t\t\t\t\t<Grid item><Icon icon='email' helpText='Your email is your username'/></Grid>\r\n\t\t\t\t\t<Grid item><Field {...EmailFieldProps} autoFocus={focusField === 'email'}/></Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container {...GridContainerProps}>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{props.alternateButton && props.submitCount > 0 && !props.isSubmitting ? \r\n\t\t\t\t\t\t\t<Icon icon='help' helpText='Reset password?'/>\r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t<Icon icon='password' helpText='Password should be 6-8 characters'/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item><Field {...PasswordFieldProps} autoFocus={focusField === 'password'} /></Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\tconst Submit = ( props ) => {\r\n\r\n\t\tconst ProgressProps = {\r\n\t\t\tcolor: 'secondary',\r\n\t\t\tsize: 30,\r\n\t\t}\r\n\r\n\t\tconst ButtonProps = {\r\n\t\t\tcolor: 'secondary',\r\n\t\t\tsize: 'small',\r\n\t\t\tdisabled: !props.isValid,\r\n\t\t\tonClick: props.submitForm,\r\n\t\t\tvariant: 'contained',\r\n\t\t}\r\n\r\n\t\tconst style = {\r\n\t\t\tdisplay: 'flex', \r\n\t\t\tjustifyContent: 'center',\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div style={style}>\r\n\t\t\t\t{props.isSubmitting ?\r\n\t\t\t\t\t<CircularProgress {...ProgressProps}/> \r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Button {...ButtonProps}>{props.submitButtonText}</Button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst DialogProps = {\r\n\t\topen: true,\r\n\t\tfullWidth: true,\r\n\t\tmaxWidth: 'xs',\r\n\t\tonBackdropClick: () => {clearTimeouts(timeouts); props.history.push('/')},\r\n\t}\r\n\r\n\tconst DialogContentTextProps = {\r\n\t\tvariant: 'body2',\r\n\t}\r\n\r\n\tfunction focusNext(values) {\r\n\t\tif (values.email === '')\r\n\t\t\tsetFocusField('email')\r\n\t\telse if (values.password === '')\r\n\t\t\tsetFocusField('password')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog {...DialogProps}>\t\r\n\t\t\t<DialogTitle>{props.done ? props.titleAfter : props.titleBefore}</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText {...DialogContentTextProps}>{props.done ? props.textAfter : props.textBefore}</DialogContentText>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\temail: window.location.search.replace('?email=',''),\r\n\t\t\t\t\t\tpassword: '',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tisInitialValid={props.isInitialValid}\r\n\t\t\t\t\tonSubmit={(values, actions) => {clearTimeouts(timeouts); props.onSubmit(values, actions)}}\r\n\t\t\t\t\trender={formikProps => \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Form onBlur={() => focusNext(formikProps.values)}>\r\n\t\t\t\t\t\t\t{!props.done && <Fields {...props} {...formikProps}/>}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{(!props.done || props.nextAfterDone) && <Submit {...props} {...formikProps}/> }\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t</Formik>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\nexport default BaseAuthForm","export function fetchPost(url, body, handleResponse) {\r\n\r\n    console.log('Fetching from ' + url)\r\n    \r\n    fetch('http://127.0.0.1:5000'+url, {\r\n        method: 'POST',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(body),\r\n    })   \r\n        .then(response => {\r\n            console.log('Received response from server: ', response)\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            console.log('Received data from server: ' + JSON.stringify(data))\r\n            handleResponse(data)\r\n        })\r\n}\r\n\r\n\r\n\r\n// export function fetchPost(url, body, handleResponse) {\r\n\r\n//     console.log('Fetching from ' + url)\r\n    \r\n//     fetch('http://127.0.0.1:5000'+url, {\r\n//         method: 'POST',\r\n//         headers: {'Content-Type':'application/json'},\r\n//         body: JSON.stringify(body),\r\n//     })\r\n//         .then(response => {\r\n//             console.log('Received response from ' + url + ': ' + response.status)\r\n//             handleResponse(response)\r\n//         })\r\n//}\r\n\r\n\r\n","import React from 'react'\r\nimport BaseAuthForm from './BaseAuthForm';\r\nimport { fetchPost } from '../../helpers/fetch'\r\n\r\n\r\nconst LoginForm = ({ history, setIsAuthenticated }) => {\r\n \r\n    function logInUser(values, actions) {\r\n\r\n\t\tconsole.log('Logging in user: ', values)\r\n\t\t\r\n\t\tfunction handleResponse(data) {\r\n            \r\n            actions.setSubmitting(false)\r\n\r\n            if (data.userLoggedIn)\r\n            {\r\n                console.log('Correct password')\r\n                setIsAuthenticated(true)\r\n                localStorage.setItem('authenticated', true)\r\n                history.push('/home')\r\n                window.location.reload();\r\n            }\r\n            else \r\n            {\r\n                console.log('Incorrect password')\r\n                actions.setFieldError('password', 'Incorrect password')\r\n            }\r\n        }\r\n\r\n        fetchPost('/logInUser', values, handleResponse)\r\n    }\r\n    \r\n    return (\r\n        <BaseAuthForm \r\n            history={history}\r\n            done={false}\r\n            titleBefore='Log In'\r\n            textBefore='Enter an email and password'\r\n            titleAfter='Success'\r\n            textAfter={'Please wait while we log you in'}\r\n            userMustExist={true}\r\n            passwordCheck={false}\r\n            onSubmit={logInUser}\r\n            submitButtonText='Log In'\r\n            alternateButton={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport BaseAuthForm from './BaseAuthForm';\r\n\r\n\r\nconst LogoutForm = ({ history }) => {\r\n   \r\n    function logoutUser() {\r\n\r\n        console.log('Logging out user')\r\n\r\n        localStorage.removeItem('authenticated')\r\n\r\n        history.push('/')\r\n        window.location.reload();\r\n\r\n        // function handleResponse(data) {\r\n\r\n        //     actions.setSubmitting(false)\r\n\r\n        //     if (data.userRegistered)\r\n        //     {\r\n        //         console.log('Server registered the new user')\r\n        //         setEmailSent(values.email)\r\n        //     }\r\n        //     else\r\n        //         console.log('Server unable to register user')\r\n        // }\r\n    \r\n        // fetchPost('/registerUser', values, handleResponse)\r\n    }\r\n\r\n    setTimeout(logoutUser, 2000)\r\n\r\n    return (\r\n        <BaseAuthForm \r\n            history={history}\r\n            done={true}\r\n            titleBefore='Blah'\r\n            textBefore='Blah blah'\r\n            titleAfter='Logged Out'\r\n            textAfter={'You have logged out successfully. Returning to the landing page.'}\r\n            userMustExist={false}\r\n            passwordCheck={true}\r\n            onSubmit={logoutUser}\r\n            submitButtonText='Blah'\r\n        />\r\n    )\r\n}\r\n\r\nexport default LogoutForm","import React, { useState } from 'react'\r\nimport BaseAuthForm from './BaseAuthForm';\r\nimport { fetchPost } from '../../helpers/fetch'\r\n\r\n\r\nconst RegisterForm = ({ history }) => {\r\n\r\n    const [emailSent, setEmailSent] = useState('')\r\n    \r\n    function registerUser(values, actions) {\r\n\r\n        console.log('Registering user: ', values)\r\n    \r\n        function handleResponse(data) {\r\n\r\n            actions.setSubmitting(false)\r\n\r\n            if (data.userRegistered)\r\n            {\r\n                console.log('Server registered the new user')\r\n                setEmailSent(values.email)\r\n            }\r\n            else\r\n                console.log('Server unable to register user')\r\n        }\r\n    \r\n        fetchPost('/registerUser', values, handleResponse)\r\n    }\r\n\r\n    return (\r\n        <BaseAuthForm \r\n            history={history}\r\n            done={emailSent}\r\n            titleBefore='Register'\r\n            textBefore='Enter an email and password'\r\n            titleAfter='Account registered'\r\n            textAfter={'An email has been sent to ' + emailSent + ' with an activation link'}\r\n            userMustExist={false}\r\n            passwordCheck={true}\r\n            onSubmit={registerUser}\r\n            submitButtonText='Register'\r\n        />\r\n    )\r\n}\r\n\r\nexport default RegisterForm","import React from 'react'\r\nimport BaseAuthForm from './BaseAuthForm';\r\n\r\n\r\nconst RegisterConf = ({ history }) => {\r\n\r\n    let email = window.location.search.replace('?email=','')\r\n\r\n    return (\r\n        <BaseAuthForm \r\n            history={history}\r\n            done={true}\r\n            titleAfter='Account activated'\r\n            textAfter={'Click below to sign in as ' + email}\r\n            onSubmit={() => history.push('/login?email='+email)}\r\n            submitButtonText='Log In'\r\n            nextAfterDone={true}\r\n            isInitialValid={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default RegisterConf","import React, { useState } from 'react'\r\nimport BaseAuthForm from './BaseAuthForm';\r\nimport { fetchPost } from '../../helpers/fetch'\r\n\r\n\r\nconst ResetForm = ({ history }) => {\r\n\r\n    const [emailSent, setEmailSent] = useState('')\r\n    \r\n    function resetPassword(values, actions) {\r\n\r\n        console.log('Resetting password for user: ', values)\r\n    \r\n        function handleResponse(data) {\r\n\r\n            actions.setSubmitting(false)\r\n\r\n            if (data.resetEmailSent)\r\n            {\r\n                console.log('Server reset the password')\r\n                setEmailSent(values.email)\r\n            }\r\n            else\r\n                console.log('Server unable to reset the password')\r\n        }\r\n    \r\n        fetchPost('/resetPasswordEmail', values, handleResponse)\r\n    }\r\n\r\n    return (\r\n        <BaseAuthForm \r\n            history={history}\r\n            done={emailSent}\r\n            titleBefore='Reset password'\r\n            textBefore='Enter an email and password'\r\n            titleAfter='Email sent'\r\n            textAfter={'An email has been sent to ' + emailSent + ' with a confirmation link'}\r\n            userMustExist={true}\r\n            passwordCheck={true}\r\n            onSubmit={resetPassword}\r\n            submitButtonText='Send confirmation email'\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResetForm","import React from 'react'\r\nimport BaseAuthForm from './BaseAuthForm';\r\n\r\n\r\nconst ResetConf = ({ history }) => {\r\n\r\n    let email = window.location.search.replace('?email=','')\r\n\r\n    return (\r\n        <BaseAuthForm \r\n            history={history}\r\n            done={true}\r\n            titleAfter='Password reset'\r\n            textAfter={'Click below to sign in as ' + email}\r\n            onSubmit={() => history.push('/login?email='+email)}\r\n            submitButtonText='Log In'\r\n            nextAfterDone={true}\r\n            isInitialValid={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResetConf","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\r\n    <Route \r\n        {...rest} \r\n        render={(props) => (\r\n            isAuthenticated || localStorage.getItem('authenticated') ?\r\n                <Component {...props} />\r\n                : \r\n                <Redirect to='/login' />\r\n        )} \r\n    />\r\n)\r\n\r\nexport default PrivateRoute","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { theme } from '../theme' \r\n\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n\r\nconst Home = ({ history }) => {\r\n\r\n   \r\n    // const NavButton = ({ to, text }) => {\r\n    //     return <Button style={styles.headerButton} component={NavLink} to={to}>{text}</Button>;\r\n    // }\r\n\r\n\t\r\n    const styles = {\r\n        div: {\r\n            backgroundColor: theme.palette.primary.main,\r\n            // backgroundSize: 'cover',\r\n            // position:'relative',\r\n            // width: '100%',\r\n            // height: '100%',\r\n            // flex:'1',\r\n            minHeight: '100vh',\r\n        },\r\n        header: {\r\n            backgroundColor: theme.palette.primary.main,\r\n            // minHeight: '90vh',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'top',\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n        headerTitle: {\r\n            fontSize: 'calc(14px + 2vmin)',\r\n            textShadow: '-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black',\r\n            // position: 'absolute',\r\n            // width: '100%',\r\n            // height: '100%',\r\n            // top: '0',\r\n            // left: '0'\r\n            // top: '150',\r\n            // left: '50%',\r\n        },\r\n        circle: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            // margin: '10% 0',\r\n            // minHeight: '200px',\r\n            backgroundColor: theme.palette.primary.main,\r\n            position: 'relative',\r\n            fontSize: 'calc(14px + 2vmin)',\r\n            textShadow: '-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black',\r\n            marginTop: '20px',\r\n            marginBottom: '65px',\r\n        },\r\n        headerSubtitle: {\r\n            fontSize: 'calc(6px + 2vmin)',\r\n        },\r\n        headerButton: {\r\n            color: theme.palette.primary.light,\r\n        },\r\n        levels: {\r\n            // borderStyle: 'solid',\r\n            // borderColor: theme.palette.primary.light,\r\n            // borderWidth: '1px',\r\n            // borderRadius: '1%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            padding: '30px',\r\n            width: '600px',\r\n            height: '300px',\r\n            marginBottom: '30px',\r\n            flexGrow: '1',\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(1),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    }\r\n\r\n        \r\n    // const logoStyle = {\r\n    //     ...styles.logo, \r\n    //     animationPlayState: window.location.pathname === '/' ? 'running' : 'paused'\r\n\t// } \r\n\r\n    let level = 2\r\n    let totalLevels = 3\r\n    let percent = (level / totalLevels) * 100\r\n\r\n    function FormRow(props) {\r\n\r\n\r\n\r\n        return (\r\n          <React.Fragment>\r\n            <Grid item xs={4}>\r\n              <Paper style={styles.paper}>item</Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <Paper style={styles.paper}>item</Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <Paper style={styles.paper}>item</Paper>\r\n            </Grid>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <div style={styles.header}>\r\n            <div style={styles.circle} >\r\n                <CircularProgress style={{ position: 'absolute' }} size={140} variant='static' value={percent} thickness={1} color='secondary' />\r\n                Level <br />{level}\r\n            </div>\r\n            <Paper style={styles.levels}>\r\n                <Grid container spacing={6}>\r\n                    <Grid container item xs={12} spacing={6}>\r\n                        <FormRow />\r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={6}>\r\n                        <FormRow />\r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={6}>\r\n                        <FormRow />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n\r\n            <p style={styles.headerSubtitle}>\r\n                <Button style={styles.headerButton} onClick={(evt) => history.push('/build')}>Build</Button> to advance to the next level\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","export default {\r\n    BODY: 'Body',\r\n    CENTER: 'Center',\r\n    CHIP_IN: 'in',\r\n    CHIP_OUT: 'out',\r\n    FLOATING_WIRE: 'floatingWire',\r\n    GATE: 'Gate', // for react-dnd?\r\n    GATE_IN: 'In',\r\n    GATE_OUT: 'Out',\r\n    NAND: 'Nand',\r\n    NODE: 'Node',\r\n    NODE_CENTER: 'Center',\r\n    TEXT: 'Text',\r\n    WIRE: '_',\r\n    // react-dnd\r\n    BOX: 'box',\r\n    CSV: 'csv'\r\n}","import React, { useState } from 'react'\r\n\r\nimport './Nand.css'     //TODO: move draggable to Source.css or something\r\n\r\nimport { gateStyle } from '../theme'\r\n\r\nimport ItemTypes from '../Routes/Build/ItemTypes'\r\n\r\n// Nand gate receives id from addGate() and attaches specific gate parts\r\nexport default ({ id }) => {\r\n\r\n    // Keep track of which terminal is highlighted\r\n    const [terminalColors, setTerminalColors] = useState({\r\n        [id+ItemTypes.GATE_IN+'A']: gateStyle.stroke,\r\n        [id+ItemTypes.GATE_IN+'B']: gateStyle.stroke,\r\n        [id+ItemTypes.GATE_OUT]: gateStyle.stroke,\r\n    })\r\n\r\n    // Modify only the terminal being mouserOver'd or mouseOut'd\r\n    function highlight(terminalId, color) {\r\n        let newTerminalColors = { ...terminalColors }\r\n        newTerminalColors[terminalId] = color\r\n        setTerminalColors(newTerminalColors)\r\n    }\r\n\r\n    return (\r\n        <g                              // provides default style (basically for the path and cirlce only)\r\n            id={id}                                     // needed so we can refer to its parent in DragPreview\r\n            stroke={gateStyle.stroke} \r\n            strokeWidth={gateStyle.gateStrokeWidth} \r\n            fill={gateStyle.fill}\r\n        >     \r\n            <path \r\n                id={id+ItemTypes.BODY} className='draggable'\r\n                d='M 20,25 L 47,25 C 75,30 75,70 47,75 L 20,75 Z'\r\n            />   \r\n            <circle cx='75' cy='50' r='7' />  \r\n            <line \r\n                id={id+ItemTypes.GATE_IN+'A'} \r\n                x1='0' y1='35' x2='20' y2='35' \r\n                onMouseOver={()=>highlight(id+ItemTypes.GATE_IN+'A', gateStyle.fill)}\r\n                onMouseOut={()=>highlight(id+ItemTypes.GATE_IN+'A', gateStyle.stroke)}\r\n                stroke={terminalColors[id+ItemTypes.GATE_IN+'A']}\r\n            />  \r\n            <line \r\n                id={id+ItemTypes.GATE_IN+'B'} \r\n                x1='0' y1='65' x2='20' y2='65' \r\n                onMouseOver={()=>highlight(id+ItemTypes.GATE_IN+'B', gateStyle.fill)}\r\n                onMouseOut={()=>highlight(id+ItemTypes.GATE_IN+'B', gateStyle.stroke)}\r\n                stroke={terminalColors[id+ItemTypes.GATE_IN+'B']}\r\n            />  \r\n            <line \r\n                id={id+ItemTypes.GATE_OUT} \r\n                x1='83' y1='50' x2='100' y2='50' \r\n                onMouseOver={()=>highlight(id+ItemTypes.GATE_OUT, gateStyle.fill)}\r\n                onMouseOut={()=>highlight(id+ItemTypes.GATE_OUT, gateStyle.stroke)}\r\n                stroke={terminalColors[id+ItemTypes.GATE_OUT]}\r\n            />    \r\n            <text \r\n                id={id+ItemTypes.TEXT}\r\n                strokeWidth={gateStyle.textStrokeWidth}\r\n                x='30' y='54' \r\n                fontSize={gateStyle.textFontSize}\r\n                fontWeight={gateStyle.textFontWeight}\r\n            >\r\n                {id}\r\n            </text>    \r\n        </g>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Memory from '@material-ui/icons/Memory';\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { theme } from '../../theme'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\n\r\nimport Nand from '../../Gates/Nand'\r\nimport { renderToStaticMarkup } from 'react-dom/server';\r\n\r\nimport ItemTypes from './ItemTypes'\r\n\r\nconst ComponentsDrawer = ({ setShift }) => {\r\n\r\n\tconst [open, setOpen] = useState(false)\r\n\r\n\t// const [expanded, setExpanded] = useState({ zero: false })\r\n\tconst [expanded, setExpanded] = useState({ zero: false })\r\n\r\n\tlet drawerWidth = theme.overrides.MuiDrawer.paper.width\r\n\t\r\n\tconst styles = {\r\n\t\topen: {\r\n\t\t\t// height: '30px',\r\n\t\t\tzIndex: 100,\r\n\t\t},\r\n\t\tclosed: {\r\n\t\t\t// width: '70%',\r\n\t\t\t// zIndex : -100,\r\n\t\t},\r\n        header: {\r\n\t\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\t\t// minHeight: '90vh',\r\n\t\t\t// display: 'flex',\r\n\t\t\t// flexDirection: 'column',\r\n\t\t\t// alignItems: 'center',\r\n\t\t\t// justifyContent: 'top',\r\n\t\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t},\r\n\t\tchapter: {\r\n\t\t\tfontSize: '0.7em'\r\n\t\t},\r\n\t\tcomponent: {\r\n\r\n\t\t},\r\n\t\tdrawerHeader: {\r\n\t\t\tbackgroundColor: theme.palette.primary.dark, \r\n\t\t\twidth: drawerWidth,\r\n\t\t\tzIndex: 9999,\r\n\t\t\tposition: \"fixed\",\r\n\t\t\ttop: 85,\t\r\n\t\t\tleft: 0,\r\n\t\t\tborderBottomStyle: 'solid',\r\n\t\t\tborderBottomWidth: '1px',\r\n\t\t\tborderBottomColor: theme.palette.primary.light,\r\n\t\t},\r\n\t\tlogo: {\r\n\t\t\t// animation: 'App-logo-spin infinite 20s linear',\r\n\t\t\t// height: '20vmin',\r\n\t\t\twidth: 100,\r\n\t\t\t// pointerEvents: 'auto',\r\n\t\t\t// cursor: 'grab',\r\n\t\t\t// animationTextContent: '@keyframes App-logo-spin { from{transform: rotate(0deg);} to{transform: rotate(360deg);} }',\r\n\t\t\tfill: theme.palette.primary.light,\r\n\t\t\t// position: 'absolute',\r\n\t\t\t// top: gatePosition.top-50,\r\n\t\t\t// left: gatePosition.left-231.58/2,\r\n\t\t\t// zIndex: 99999,\r\n\t\t},\r\n\t}\t\r\n\t\t\r\n\t// var img = new Image() \r\n\t// img.src = 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png'\r\n\t// img.src = require('./fav.png')\r\n\t// img.src = require(Nand(styles.logo))\r\n\r\n\r\n\tvar img = new Image();\r\n\tconst svgString = renderToStaticMarkup(\r\n        <svg style={styles.logo} xmlns=\"http://www.w3.org/2000/svg\" mlns=\"http://www.w3.org/2000/svg\" >\r\n\t\t\t<Nand style={styles.logo} divWrap={false} />\r\n\t\t</svg>\r\n\t)\r\n\tlet blob = new Blob([svgString], {type: 'image/svg+xml'});\r\n\tlet url = URL.createObjectURL(blob);\r\n\timg.src = url;\r\n\timg.addEventListener('load', () => URL.revokeObjectURL(url), {once: true});\r\n\timg.width = 100\r\n\timg.height = 100\r\n\r\n\t// console.log('img = ', img)\r\n\r\n\r\n\tfunction handleDragStart(evt) {\r\n\t\tconsole.log('ComponentsDrawer > handleDragStart() : evt.target.id = ', evt.target.id)\r\n\t\tevt.dataTransfer.setData('text/plain', evt.target.id)\r\n\t\tevt.dataTransfer.setDragImage(img, img.width/2, img.height/2)\r\n\t}\r\n\r\n\tconst ExpandedDrawer = () => (\r\n\t\t\t<Drawer style={styles.open} open={open} width={drawerWidth} BackdropProps={{ invisible: true }} onClose={() => setOpen(false)}>\r\n\t\t\t\t<div\r\n\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\tonClick={() => console.log('onClick')}\r\n\t\t\t\t\tonKeyDown={() => console.log('onKeyDown')}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid style={styles.drawerHeader} container alignItems='center' justify='space-around'>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Memory style={{ color: 'white', display: 'inline' }} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Typography style={{ transform: 'translate(7px, -1px)' }}>MY COMPONENTS</Typography> \r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<IconButton onClick={()=> {setOpen(false); setShift(0)}}>\r\n\t\t\t\t\t\t\t\t<ChevronLeft />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\t\t\t\t\t\r\n\t\t\t\t\t<List style={{ marginTop: '40px' }}>\r\n\t\t\t\t\t\t<ListItem button key='Nand Gate' onClick={() => setExpanded({zero: !expanded.zero})}>\r\n\t\t\t\t\t\t\t<Typography style={{ position: 'relative', left: '8px', }}>0</Typography>\r\n\t\t\t\t\t\t\t<ListItemText primary='Nand Gate' style={{ position: 'relative', left: '23px', }} />\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t{expanded.zero && \r\n\t\t\t\t\t\t\t<div style={{ backgroundColor: '#b596c5', overflowX: 'hidden' }}>\r\n\t\t\t\t\t\t\t\t<ListItem id={'new'+ItemTypes.NAND} button key={ItemTypes.NAND} draggable onDragStart={(evt) => handleDragStart(evt)}>\r\n\t\t\t\t\t\t\t\t\t<ListItemText style={{ position: 'relative', left: '33px' }} secondary='Nand' id='nand' />\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<ListItem button key='Nand2'>\r\n\t\t\t\t\t\t\t\t\t<ListItemText style={{ position: 'relative', left: '33px' }} secondary='Nand2' />\t\t\t\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t{['Basic Gates', 'Arithmetic', 'Memory', 'Machine Language', 'Computer Architecture', 'Assembler'].map((text, index) => (\r\n\t\t\t\t\t\t\t<ListItem button key={text}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ position: 'relative', left: '8px', }}>{index+1}</Typography>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={text} style={{ position: 'relative', left: '8px', }} />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t{['Virtual Machine I', 'Virtual Machine II', 'High-Level Language', 'Compiler I', 'Compiler II', 'Operating System', 'More Fun'].map((text, index) => (\r\n\t\t\t\t\t\t\t<ListItem button key={text}>\r\n\t\t\t\t\t\t\t\t<Typography style={{ position: 'relative', left: index+7 <= 9 ? '8px' : '0px'}}>{index+7}</Typography>\r\n\t\t\t\t\t\t\t\t{/* <Typography>{index+7 <= 9 ? <span>&nbsp;&nbsp;{index+7}</span> : index+7 }</Typography> */}\r\n\t\t\t\t\t\t\t\t<ListItemText primary={text} style={{ position: 'relative', left: index+7 <= 9 ? '8px' : '0px'}} />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t</Drawer>\r\n\t)\r\n\r\n\tconst CollapsedDrawer = () => (\r\n\t\t<div style={{ backgroundColor: theme.palette.primary.dark, width: '35px', position: 'absolute', left: '0', top: '85px', bottom: '0' }}>\r\n\t\t\t<Button style={{ width: '162px', height: '35px', transform: 'rotate(90deg) translate(62px,62px)' }} onClick={() => {setOpen(true); setShift(drawerWidth)}}>\r\n\t\t\t\t<Grid container alignItems='center'>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Memory style={{ color: 'white', display: 'inline' }} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Typography style={{ transform: 'translate(7px,-3px)' }}>My Components</Typography> \r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CollapsedDrawer />\r\n\t\t\t<ExpandedDrawer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ComponentsDrawer;","import React, { useState } from 'react'\r\n\r\n// import './Node.css'\r\n\r\nimport { theme } from '../theme'\r\n\r\nimport ItemTypes from '../Routes/Build/ItemTypes'\r\n\r\nexport default ({ id, stroke, fill }) => {\r\n\r\n    const [terminalColor, setTerminalColor] = useState(stroke)\r\n\r\n    console.log('Node : id = ', id)\r\n    // console.log('Node : ItemTypes.CHIP_IN = ', ItemTypes.CHIP_IN)\r\n\r\n    // console.log('Node : !id.includes(ItemTypes.CHIP_IN) && !id.includes(ItemTypes.CHIP_OUT) = ', !id.includes(ItemTypes.CHIP_IN) && !id.includes(ItemTypes.CHIP_OUT))\r\n\r\n\r\n\r\n    return (\r\n        <g id={id}>\r\n            {!id.includes(ItemTypes.CHIP_IN) && !id.includes(ItemTypes.CHIP_OUT) ? \r\n                <circle \r\n                    id={id+ItemTypes.BODY} \r\n                    className=\"draggable confine\"\r\n                    cx='50' cy='50' r='5'\r\n                    stroke={stroke}\r\n                    fill={fill}\r\n                />\r\n                : \r\n                null\r\n            }\r\n            <circle \r\n                id={id+ItemTypes.NODE_CENTER} \r\n                // className=\"draggable confine\"\r\n                cx='50' cy='50' \r\n                r={id.includes(ItemTypes.CHIP_IN) || id.includes(ItemTypes.CHIP_OUT) ? '5' : '2'}\r\n                stroke={terminalColor}\r\n                fill={terminalColor}\r\n                onMouseOver={()=>setTerminalColor(theme.palette.primary.light)}\r\n                onMouseOut={()=>setTerminalColor('black')}\r\n            />\r\n        </g> \r\n    )       \r\n}","import ItemTypes from './ItemTypes'\r\n\r\n/**\r\n* Get a new XY point in SVG-Space, where X and Y are relative to an existing element.  Useful for drawing lines between elements, for example\r\n\r\n* X : the new X with relation to element, 5 would be '5' to the right of element's left boundary.  element.width would be the right edge.\r\n* Y : the new Y coordinate, same principle applies\r\n* svg: the parent SVG DOM element\r\n* element: the SVG element which we are using as a base point.\r\n*/\r\n// Source: https://stackoverflow.com/questions/26049488/how-to-get-absolute-coordinates-of-object-inside-a-g-group/37927466\r\nfunction getRelativeXY(x, y, svg, element) {\r\n    // console.log('WireHelpers > getRelativeXY() : x = ', x, ' y = ', y, ' svg = ', svg, ' element = ', element)\r\n\r\n    var p = svg.createSVGPoint();\r\n    // console.log('WireHelpers > getRelativeXY() : p = ', p)\r\n\r\n    p.x = x;\r\n    p.y = y;\r\n\r\n    var ctm = element.getCTM();\r\n    // console.log('WireHelpers > getRelativeXY() : ctm = ', ctm)\r\n\r\n    var pMatrixTransform = p.matrixTransform(ctm)\r\n    // console.log('WireHelpers > getRelativeXY() : pMatrixTransform = ', pMatrixTransform)\r\n\r\n    return pMatrixTransform\r\n}\r\n\r\n// Depending on the terminal type, get the relative point of a specific extreme (or center)\r\nfunction getTerminalPoint(terminal) {\r\n\r\n    console.log('WireHelpers > getTerminalPoint() : terminal = ', terminal)\r\n\r\n    if (!terminal) return\r\n\r\n    let x, y\r\n    \r\n    if      (terminal.id.includes(ItemTypes.GATE_OUT))      { x = 'x2'; y = 'y2' }\r\n    else if (terminal.id.includes(ItemTypes.GATE_IN))       { x = 'x1'; y = 'y1' }\r\n    else if (terminal.id.includes(ItemTypes.NODE_CENTER))   { x = 'cx'; y = 'cy' }\r\n    else if (terminal.id.includes(ItemTypes.CHIP_IN))       { x = 'x2'; y = 'y2' }\r\n    else if (terminal.id.includes(ItemTypes.CHIP_OUT))      { x = 'x1'; y = 'y1' }\r\n\r\n    console.log(`WireHelpers > getTerminalPoint() : x = ${x}, y = ${y}`)\r\n\r\n    x = terminal[x].baseVal.value\r\n    y = terminal[y].baseVal.value\r\n\r\n    const relativePoint = getRelativeXY(x, y, document.getElementById('svg'), terminal)\r\n\r\n    return relativePoint\r\n}\r\n\r\n// Convert window coords (clientX,Y) to svg space\r\n// Source: http://www.petercollingridge.co.uk/tutorials/svg/interactive/dragging/ \r\nfunction getMousePosition(evt) {\r\n    \r\n    var CTM = document.getElementById('svg').getScreenCTM() // current transformation matrix\r\n    \r\n    if (evt.touches) evt = evt.touches[0]\r\n    \r\n    // (x,y) in svg --> (ax+e, dy+f) on screen\r\n    return {\r\n        x: (evt.clientX - CTM.e) / CTM.a,\r\n        y: (evt.clientY - CTM.f) / CTM.d\r\n    }\r\n}\r\n\r\nfunction terminalConnected(terminalId, wires) {\r\n    const wireIds = Object.keys(wires)\r\n    // console.log('WireHelpers > terminalAlreadyConnected() : wireIds = ', wireIds)\r\n\r\n    let terminalConnected = false\r\n    wireIds.forEach(wireId => {\r\n        // console.log('WireHelpers > terminalAlreadyConnected() : wireId = ', wireId)\r\n        const wireTerminals = wireId.split(ItemTypes.WIRE)\r\n        if (wireTerminals[0] === terminalId || wireTerminals[1] === terminalId) {\r\n            terminalConnected = wireId\r\n            return terminalConnected\r\n        }\r\n    })\r\n\r\n    // console.log('WireHelpers > terminalAlreadyConnected() : terminalConnected = ', terminalConnected)\r\n    return terminalConnected\r\n}\r\n\r\n// function terminalConnectedToType(terminalId, wireId) {\r\n\r\n//     console.log('WireHelpers > terminalConnectedToType() : terminalId = ', terminalId)\r\n//     console.log('WireHelpers > terminalConnectedToType() : wireId = ', wireId)\r\n\r\n//     const wireTerminalIds = wireId.split(ItemTypes.WIRE)\r\n//     const fromId = wireTerminalIds[0]\r\n//     const toId = wireTerminalIds[1]\r\n//     console.log('WireHelpers > terminalConnectedToType() : fromId = ', fromId)\r\n//     console.log('WireHelpers > terminalConnectedToType() : toId = ', toId)\r\n\r\n//     let terminalType\r\n//     if      (terminalId === fromId)     terminalType = getTerminalType(toId)\r\n//     else if (terminalId === toId)       terminalType = getTerminalType(fromId)\r\n\r\n//     console.log('WireHelpers > terminalConnectedToType() : terminalType = ', terminalType)\r\n//     return terminalType\r\n// }\r\n\r\nfunction getTerminalType(terminalId) {\r\n\r\n    // console.log('WireHelpers > getTerminalType() : terminalId = ', terminalId)\r\n\r\n    let terminalType\r\n    if      (terminalId.includes(ItemTypes.GATE_IN))        terminalType = ItemTypes.GATE_IN\r\n    else if (terminalId.includes(ItemTypes.GATE_OUT))       terminalType = ItemTypes.GATE_OUT\r\n    else if (terminalId.includes(ItemTypes.CHIP_IN))        terminalType = ItemTypes.CHIP_IN\r\n    else if (terminalId.includes(ItemTypes.CHIP_OUT))       terminalType = ItemTypes.CHIP_OUT\r\n    else if (terminalId.includes(ItemTypes.NODE_CENTER))    terminalType = ItemTypes.NODE_CENTER    // should go last or else CHIP_IN is considered NODE_CENTER\r\n\r\n    // console.log('WireHelpers > getTerminalType() : terminalType = ', terminalType)\r\n    return terminalType\r\n}\r\n\r\n// function mouseOrTerminalPoint(evt, id) {\r\n//     return id === 'floatingTerminal' \r\n//         ? getMousePosition(evt)\r\n//         : getTerminalPoint(document.getElementById(id))\r\n// }\r\n\r\n// function nodeConnectedToOut(nodeId, wires) {\r\n//     const wireIds = Object.keys(wires)\r\n\r\n//     return wireIds.some(wireId => (\r\n//         wireId.includes('Out') && wireId.includes(nodeId))\r\n//     )\r\n// }\r\n\r\n// function nodeConnectedToChipIn(nodeId, wires) {\r\n//     const wireIds = Object.keys(wires)\r\n\r\n//     return wireIds.some(wireId => (\r\n//         wireId.includes('in') && wireId.includes(nodeId))\r\n//     )\r\n// }\r\n\r\nexport { getMousePosition, terminalConnected, getTerminalPoint, getTerminalType }","import update from 'immutability-helper'\r\nimport { getMousePosition, getTerminalPoint, terminalConnected, getTerminalType } from './WireHelpers'\r\nimport ItemTypes from './ItemTypes'\r\n\r\n\r\n\r\nfunction createFloatingWire(evt, wires, setWires, setFloatingWire) {\r\n    \r\n    const terminalId = evt.target.id\r\n    console.log('WireFuncs > createFloatingWire() : terminalId = ', terminalId)\r\n\r\n    const terminalType = getTerminalType(terminalId)\r\n    console.log('WireFuncs > createFloatingWire() : terminalType = ', terminalType)\r\n\r\n\r\n    const existingWireAtIn = terminalConnected(terminalId, wires)\r\n\r\n    let from, newFloatingWireName\r\n    if (terminalType === ItemTypes.GATE_IN && existingWireAtIn) {\r\n\r\n        console.log(`WireFuncs > createFloatingWire() : ${terminalId} already connected to wire ${existingWireAtIn}, lifting up`)\r\n        \r\n        // let newWires = { ...wires }\r\n        // delete newWires[existingWireAtIn]      \r\n        // setWires(newWires)\r\n\r\n        const fromId = existingWireAtIn.replace(terminalId,'').replace(ItemTypes.WIRE,'')\r\n        console.log('WireFuncs > createFloatingWire() : fromId = ', fromId)\r\n\r\n        from = document.getElementById(fromId)\r\n        newFloatingWireName = fromId + ItemTypes.WIRE + ItemTypes.FLOATING_WIRE + '^' + existingWireAtIn\r\n    }\r\n    else {\r\n        from = document.getElementById(terminalId)\r\n        newFloatingWireName = terminalId + ItemTypes.WIRE + ItemTypes.FLOATING_WIRE\r\n    }\r\n\r\n    const fromPoint = getTerminalPoint(from)\r\n    const toPoint = getMousePosition(evt)\r\n\r\n    let newFloatingWire = {}\r\n    newFloatingWire.name = newFloatingWireName\r\n    newFloatingWire.from = {x: fromPoint.x, y: fromPoint.y} \r\n    newFloatingWire.to = {x: toPoint.x, y: toPoint.y} \r\n    // const newFloatingWire = {\r\n    //     name: newFloatingWireName,\r\n    //     from: {x: fromPoint.x, y: fromPoint.y}, \r\n    //     to: {x: toPoint.x, y: toPoint.y} \r\n    // }\r\n    console.log('WireFuncs > createFloatingWire() : newFloatingWire = ', newFloatingWire)\r\n\r\n    setFloatingWire(newFloatingWire)\r\n}\r\n\r\nfunction dragFloatingWire(evt, floatingWire, setFloatingWire) {\r\n    \r\n    // console.log('WireFuncs > dragFloatingWire() : floatingWire = ', floatingWire)\r\n\r\n    const mousePos = getMousePosition(evt)\r\n    // console.log('WireFuncs > dragFloatingWire() : mousePos = ', mousePos)\r\n    \r\n    setFloatingWire(update(floatingWire, {\r\n        $merge: {\r\n            to: {x: mousePos.x, y: mousePos.y}\r\n        }\r\n    }))\r\n}\r\n\r\nfunction connectedToProvider(terminalIds) {\r\n\r\n    return terminalIds.some(terminalId => {\r\n        console.log('WireFuncs > connectedToProvider() : terminalId = ', terminalId)\r\n\r\n        const terminalType = getTerminalType(terminalId)\r\n        console.log('WireFuncs > connectedToProvider() : terminalType = ', terminalType)\r\n        \r\n        return terminalType === ItemTypes.GATE_OUT || terminalType === ItemTypes.CHIP_IN\r\n    })\r\n}\r\n\r\nfunction getConnectedTerminals(terminalId, wires) {\r\n    const wireIds = Object.keys(wires)\r\n\r\n    let connectedTerminals = []\r\n\r\n    wireIds.forEach(wireId => {\r\n        if (wireId.includes(terminalId)) {\r\n            const connectedTerminal = wireId.replace(ItemTypes.WIRE,'').replace(terminalId,'')\r\n            connectedTerminals.push(connectedTerminal)\r\n        }\r\n    })\r\n\r\n    return connectedTerminals\r\n}\r\n\r\n\r\n\r\nfunction getNetwork(terminalId, wires) {\r\n\r\n    const connectedTerminals = getConnectedTerminals(terminalId, wires)\r\n    console.log('WireFuncs > getNetwork() : connectedTerminals = ', connectedTerminals)\r\n\r\n    let network = {}\r\n    network[terminalId] = connectedTerminals\r\n\r\n    connectedTerminals.forEach(connectedTerminalId => {\r\n        network[connectedTerminalId] = getConnectedTerminals(connectedTerminalId, wires)\r\n    })\r\n    console.log('WireFuncs > getNetwork() : network = ', network)\r\n\r\n    for (var terminal in network) {\r\n        console.log('WireFuncs > getNetwork() : terminal = ', terminal)\r\n\r\n        network[terminal].forEach(connectedTerminal => {\r\n            if (!network[connectedTerminal])\r\n                network[connectedTerminal] = getConnectedTerminals(connectedTerminal, wires)\r\n        })\r\n    }\r\n    console.log('WireFuncs > getNetwork() : network = ', network)\r\n    \r\n    return network\r\n}\r\n\r\nfunction networkContainsProvider(network) {\r\n    let containsProvider = false\r\n\r\n    const networkPoints = Object.keys(network)\r\n    containsProvider = connectedToProvider(networkPoints)\r\n    console.log('WireFuncs > connectFloatingWire() : networkPoints contain provider = ', containsProvider)\r\n\r\n    if (!containsProvider) {\r\n        console.log('WireFuncs > connectFloatingWire() : networkContainsProvider do not contain provider, checking points connected to those points')\r\n\r\n        for (var networkPoint in network) {\r\n            console.log('WireFuncs > connectFloatingWire() : networkPoint = ', networkPoint)\r\n\r\n            containsProvider = connectedToProvider(network[networkPoint])\r\n            console.log('WireFuncs > connectFloatingWire() : containsProvider = ', containsProvider)\r\n\r\n            if (containsProvider) break\r\n        }\r\n    }\r\n    console.log('WireFuncs > connectFloatingWire() : containsProvider', containsProvider)\r\n    return containsProvider\r\n}\r\n\r\nfunction connectFloatingWire(evt, wires, setWires, floatingWire, setFloatingWire) {\r\n\r\n    console.log('WireFuncs > connectFloatingWire() : floatingWire = ', floatingWire)\r\n\r\n    setFloatingWire(null)\r\n\r\n    const sourceTerminalId = floatingWire.name.replace(ItemTypes.FLOATING_WIRE, '').replace(ItemTypes.WIRE, '')\r\n    const sourceNetwork = getNetwork(sourceTerminalId, wires)\r\n    const sourceNetworkContainsProvider = networkContainsProvider(sourceNetwork)\r\n    console.log('WireFuncs > connectFloatingWire() : sourceTerminalId = ', sourceTerminalId)\r\n    console.log('WireFuncs > connectFloatingWire() : sourceNetwork = ', sourceNetwork)\r\n    console.log('WireFuncs > connectFloatingWire() : sourceNetworkContainsProvider = ', sourceNetworkContainsProvider)\r\n\r\n    \r\n    const targetTerminalId = evt.target.id\r\n    const targetNetwork = getNetwork(targetTerminalId, wires)\r\n    const targetNetworkContainsProvider = networkContainsProvider(targetNetwork)\r\n    console.log('WireFuncs > connectFloatingWire() : targetTerminalId =', targetTerminalId)\r\n    console.log('WireFuncs > connectFloatingWire() : targetNetwork = ', targetNetwork)\r\n    console.log('WireFuncs > connectFloatingWire() : targetNetworkContainsProvider = ', targetNetworkContainsProvider)\r\n\r\n    if (sourceNetworkContainsProvider && targetNetworkContainsProvider) {\r\n        console.log('WireFuncs > connectFloatingWire() : cannot connect - both source and target networks contain providers')\r\n        return\r\n    }\r\n\r\n    const floatingWireNameParts = floatingWire.name.split('^')\r\n    console.log('WireFuncs > connectFloatingWire() : floatingWireNameParts = ', floatingWireNameParts)\r\n\r\n    const newWireId = floatingWireNameParts[0].replace(ItemTypes.FLOATING_WIRE, targetTerminalId)\r\n    console.log('WireFuncs > connectFloatingWire() : newWireId = ', newWireId)\r\n\r\n    \r\n    let newWirePoints = {} \r\n    newWirePoints.from = {x: floatingWire.from.x, y: floatingWire.from.y}\r\n    \r\n    const to = document.getElementById(targetTerminalId)\r\n    const toPoint = getTerminalPoint(to)\r\n    newWirePoints.to = {x: toPoint.x, y: toPoint.y}\r\n\r\n    let newWires = { ...wires }\r\n    newWires[newWireId] = newWirePoints\r\n    if (floatingWireNameParts[1]) delete newWires[floatingWireNameParts[1]]\r\n    console.log('WireFuncs > connectFloatingWire() : newWires = ', newWires)\r\n\r\n    setWires(newWires)\r\n}\r\n\r\nfunction updateWires(wires, setWires) {\r\n    console.log('WireFuncs > updateWire() : wires = ', wires)\r\n\r\n    const wireIds = Object.keys(wires)        \r\n    console.log('WireFuncs > updateWire() : wireIds = ', wireIds)\r\n    console.log('WireFuncs > updateWire() : wireIds.length = ', wireIds.length)\r\n\r\n    if (wireIds.length === 0) return \r\n\r\n    let wireChanges = {}\r\n    wireIds.forEach(wireId => {\r\n\r\n        console.log('WireFuncs > updateWire() : wireId = ', wireId)\r\n        \r\n        let fromId = wireId.split('_')[0]\r\n        console.log('WireFuncs > updateWire() : fromId = ', fromId)\r\n        \r\n        // console.log('WireFuncs > updateWire() : updating wiredId = ', wireId)\r\n\r\n        const toId = wireId.split('_')[1]\r\n\r\n        const from = document.getElementById(fromId)\r\n        const to = document.getElementById(toId)\r\n\r\n        // if (from === null || to === null) return\r\n\r\n        const fromPoint = getTerminalPoint(from)\r\n        const toPoint = getTerminalPoint(to)\r\n\r\n        const wireChange = {\r\n            [wireId]: {\r\n                $merge: {\r\n                    from: { x: fromPoint.x, y: fromPoint.y },\r\n                    to: { x: toPoint.x, y: toPoint.y }\r\n                }\r\n            }\r\n        }\r\n\r\n        wireChanges = { ...wireChanges, ...wireChange }\r\n    })\r\n\r\n    console.log('WireFuncs > updateWire : wireChanges = ', wireChanges)\r\n    setWires(update(wires, wireChanges))\r\n}\r\n\r\nexport function updateWiresTerminals(wires, setWires) {\r\n    console.log('WireFuncs > updateWire() : wires = ', wires)\r\n\r\n    const wireIds = Object.keys(wires)        \r\n    console.log('WireFuncs > updateWire() : wireIds = ', wireIds)\r\n    console.log('WireFuncs > updateWire() : wireIds.length = ', wireIds.length)\r\n\r\n    if (wireIds.length === 0) return \r\n\r\n    let wireChanges = {}\r\n    wireIds.forEach(wireId => {\r\n\r\n        console.log('WireFuncs > updateWire() : wireId = ', wireId)\r\n        \r\n        let fromId = wireId.split('_')[0]\r\n        console.log('WireFuncs > updateWire() : fromId = ', fromId)\r\n        \r\n        // console.log('WireFuncs > updateWire() : updating wiredId = ', wireId)\r\n\r\n        const toId = wireId.split('_')[1]\r\n\r\n        const from = document.getElementById(fromId)\r\n        const to = document.getElementById(toId)\r\n\r\n        const fromPoint = getTerminalPoint(from)\r\n        const toPoint = getTerminalPoint(to)\r\n\r\n        const wireChange = {\r\n            [wireId]: {\r\n                $merge: {\r\n                    from: { x: fromPoint.x, y: fromPoint.y },\r\n                    to: { x: toPoint.x, y: toPoint.y }\r\n                }\r\n            }\r\n        }\r\n\r\n        wireChanges = { ...wireChanges, ...wireChange }\r\n    })\r\n\r\n    console.log('WireFuncs > updateWire : wireChanges = ', wireChanges)\r\n    setWires(update(wires, wireChanges))\r\n}\r\n\r\nexport { createFloatingWire, dragFloatingWire, connectFloatingWire, updateWires }","// Find the next available name for a given gate/node\r\nfunction getNextName(gateType, gates) {\r\n\r\n    console.log('GateFuncs > getNextName() : gates = ', gates)\r\n\r\n    let highestNumber = -1\r\n    let currentNumber\r\n\r\n    // Increment suffix for every encounter of the same type,\r\n    // must account for deleted gates\r\n    for (var gate in gates) {                           \r\n        if (gate.includes(gateType)) {\r\n            // console.log('GateFuncs > getNextName() : gate = ', gate)\r\n            // console.log('GateFuncs > getNextName() : gateType = ', gateType)\r\n\r\n            currentNumber = gate.replace(gateType, '')\r\n            // console.log('GateFuncs > getNextName() : currentNumber = ', currentNumber)\r\n\r\n            currentNumber = Number(currentNumber)\r\n            // console.log('GateFuncs > getNextName() : currentNumber = ', currentNumber)\r\n            // console.log('GateFuncs > getNextName() : highestNumber = ', highestNumber)\r\n\r\n            if (currentNumber > highestNumber)\r\n                highestNumber = currentNumber\r\n        }\r\n    }\r\n\r\n    highestNumber++\r\n    \r\n    return gateType + highestNumber.toString()\r\n}\r\n\r\nfunction addChipTerminalNodePoint(chipTerminalId) {\r\n\r\n    console.log('GateFuncs > addChipTerminalNode() : chipTerminalId = ', chipTerminalId)\r\n    const chipInTerminal = document.getElementById(chipTerminalId)            \r\n    \r\n    console.log('GateFuncs : chipInTerminal = ', chipInTerminal)\r\n\r\n    if (!chipInTerminal) return null\r\n\r\n    const terminalBbox = chipInTerminal.getBoundingClientRect()\r\n\r\n    let x\r\n    if (chipTerminalId.includes('in'))          x= terminalBbox.right\r\n    else if (chipTerminalId.includes('out'))    x= terminalBbox.left\r\n\r\n    let y = terminalBbox.top + terminalBbox.height/2\r\n    \r\n    const svg = document.getElementById('svg')\r\n    const pt = svg.createSVGPoint()\r\n    pt.x = x\r\n    pt.y = y\r\n\r\n    const svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n    x = svgP.x-100/2    // not sure why 50 is a good value but it shows up again here\r\n    y = svgP.y-100/2\r\n\r\n    const translation = `${x} ${y}`\r\n    console.log(`GateFuncs > addChipTerminalNode() : translation = ${translation}`)\r\n\r\n    // return translation\r\n    return {x: x, y: y}\r\n}\r\n\r\nfunction addNewChipTerminalNode(inOuts) {\r\n    \r\n    let newGates = {}\r\n\r\n    for (var inOut in inOuts) {\r\n\r\n        console.log('Build > addChipTerminalNode() : inOut = ', inOut)\r\n\r\n        const chipNodePoint = addChipTerminalNodePoint(inOut)\r\n\r\n        newGates[inOut+'Node'] = {\r\n            left: chipNodePoint.x,\r\n            top: chipNodePoint.y\r\n        }\r\n    }\r\n\r\n    return newGates\r\n}\r\n\r\nexport { getNextName, addNewChipTerminalNode }","import React, { createContext, useState, useEffect } from 'react'\r\n\r\nimport { updateWires } from './WireFuncs'\r\nimport { addChipTerminalNode } from './GateFuncs'\r\n\r\n\r\nconst ChipInsContext            = createContext([{}, () => {}])\r\nconst ChipOutsContext           = createContext([{}, () => {}])\r\nconst GatesContext              = createContext([{}, () => {}])\r\nconst WiresContext              = createContext([{}, () => {}])\r\nconst FloatingWireContext       = createContext([null, () => {}])\r\nconst SelectedElementContext    = createContext([null, () => {}])\r\n\r\n\r\nconst defaultChipIns    = false     ?   { in0: {value: 0, connectedTo: null} }              : {}\r\nconst defaultChipOuts   = false     ?   { out0: {value: 0, connectedTo: null} }             : {}\r\n// const defaultGates      = true      ?   { Nand0: {left: 209.5, top: 64, rotation: 0} }      : {}\r\nconst defaultGates      = true      ?   { Nand0: {left: 209.5, top: 64, rotation: 0}, Nand1: {left: 400.5, top: 90, rotation: 0} }      : {}\r\nconst defaultWires      = false     ?   { \r\n    Nand0Out_Nand1InA: { from: {x: 309.5, y: 114}, to: {x: 400.5, y: 125} }, \r\n    Nand0Out_Nand0InA: { from: {x: 500.5, y: 200}, to: {x: 300.5, y: 200} } \r\n}      : {}\r\n\r\n\r\n\r\nconst BuildContextProvider = (props) => {\r\n    \r\n\tconst [chipIns, setChipIns]                     = useState(defaultChipIns)\r\n    const [chipOuts, setChipOuts]                   = useState(defaultChipOuts)\r\n    const [gates, setGates]                         = useState(defaultGates)\r\n\tconst [wires, setWires]                         = useState(defaultWires)\r\n    const [floatingWire, setFloatingWire]           = useState(null)\r\n    const [selectedElement, setSelectedElement]     = useState(null)\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(()=>updateWires(wires, setWires), [gates, chipIns])\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => addChipTerminalNode(chipIns, chipOuts, gates, setGates), [chipIns, chipOuts])\r\n\t\r\n    return (\r\n        <ChipInsContext.Provider value={[chipIns, setChipIns]}>\r\n            <ChipOutsContext.Provider value={[chipOuts, setChipOuts]}>\r\n                <GatesContext.Provider value={[gates, setGates]}>\r\n                    <WiresContext.Provider value={[wires, setWires]}>\r\n                        <FloatingWireContext.Provider value={[floatingWire, setFloatingWire]}>\r\n                            <SelectedElementContext.Provider value={[selectedElement, setSelectedElement]}>\r\n                                {props.children}\r\n                            </SelectedElementContext.Provider>\r\n                        </FloatingWireContext.Provider>\r\n                    </WiresContext.Provider>\r\n                </GatesContext.Provider>\r\n            </ChipOutsContext.Provider>\r\n        </ChipInsContext.Provider>\r\n    )\r\n}\r\n\r\nexport { BuildContextProvider, ChipInsContext, ChipOutsContext, GatesContext, WiresContext, FloatingWireContext, SelectedElementContext }","import update from 'immutability-helper'\r\nimport { getMousePosition, getTerminalPoint } from './WireHelpers'\r\nimport { getNextName, addNewChipTerminalNode } from './GateHelpers'\r\nimport ItemTypes from './ItemTypes'\r\n\r\n\r\n// Add a gate to dnd dropzone\r\nfunction addGate(evt, gateId, gates, setGates) {\r\n\r\n    //TODO: consider getting gateId from evt.dataTransfer.getData('text')\r\n    gateId = gateId.replace('new', '')                                  // deduce gate to drop\r\n    console.log('GateFuncs > addGate() : gateId = ', gateId)\r\n\r\n    console.log('GateFuncs > addGate() : gates = ', gates)\r\n    gateId = getNextName(gateId, gates)                           // find next number up for the given gate\r\n    console.log('GateFuncs > addGate() : gateId = ', gateId)\r\n\r\n    const mousePos = getMousePosition(evt)\r\n    const top = mousePos.y - 100/2              //TODO: figure out why 100/2\r\n    const left = mousePos.x - 100/2\r\n\r\n    let newGates = { ...gates }\r\n    newGates[gateId] = { top: top, left: left, rotation: 0 }      // add new gate with its info\r\n\r\n    console.log('GateFuncs > addGate() : newGates = ', newGates)\r\n    setGates(newGates)\r\n}\r\n\r\nfunction addNode(evt, gates, setGates, wires, setWires) {\r\n\r\n    // evt.preventDefault()\r\n\r\n    let wireId = evt.target.id\r\n    console.log('GateFuncs > addNode() : wireId = ', wireId)\r\n\r\n    const id = getNextName('Node', gates)\r\n    console.log('GateFuncs > addNode() : id = ', id)\r\n\r\n    let newGates = { ...gates }\r\n    const mousePos = getMousePosition(evt)\r\n\r\n    newGates[id] = { \r\n        left: mousePos.x - 100/2, //TODO: figure out why 100/2 (or 50)\r\n        top: mousePos.y - 100/2, \r\n        rotation: 0 \r\n    }\r\n\r\n    console.log('GateFuncs > addNode() : newGates = ', newGates)\r\n    setGates(newGates)\r\n\r\n    const fromId = wireId.split(ItemTypes.WIRE)[0]\r\n    const toId = wireId.split(ItemTypes.WIRE)[1]\r\n    console.log('GateFuncs > addNode() : fromId = ', fromId)\r\n    console.log('GateFuncs > addNode() : toId = ', toId)\r\n\r\n    const from = document.getElementById(fromId)\r\n    const to = document.getElementById(toId)\r\n    console.log('GateFuncs > addNode() : from = ', from)\r\n    console.log('GateFuncs > addNode() : to = ', to)\r\n\r\n    const fromPoint = getTerminalPoint(from)\r\n    const toPoint = getTerminalPoint(to)\r\n\r\n    let newWires = { ...wires }\r\n\r\n    newWires[fromId + ItemTypes.WIRE + id + ItemTypes.NODE_CENTER] = {\r\n        from: {x: fromPoint.x, y: fromPoint.y},\r\n        to: {x: mousePos.x, y: mousePos.y}\r\n    }\r\n      \r\n    newWires[id + ItemTypes.NODE_CENTER + ItemTypes.WIRE + toId] = {\r\n        from: {x: mousePos.x, y: mousePos.y},\r\n        to: {x: toPoint.x, y: toPoint.y}\r\n    }\r\n\r\n    delete newWires[wireId]\r\n\r\n    console.log('GateFuncs > addNode() : newWires = ', newWires)\r\n    setWires(newWires)\r\n}\r\n   \r\nfunction rotateGate(id, gates, setGates) {\r\n\r\n    const gateId = id.replace('Body', '')   // deduce gate id from gate body\r\n    console.log('GateFuncs > rotateGate() : gateId = ', gateId)\r\n\r\n    const newRotation = (gates[gateId].rotation + 90) % 360     // rotate 90deg clockwise\r\n    console.log('GateFuncs > rotateGate() : newRotation = ', newRotation)\r\n\r\n    // For the given gate, modify current rotation with new rotation\r\n    setGates(update(gates, {\r\n        [gateId]: {\r\n            $merge: {\r\n                rotation: newRotation\r\n            }\r\n        }\r\n    }))\r\n}\r\n\r\n\r\nfunction addChipTerminalNode(inputs, outputs, gates, setGates) {\r\n    \r\n    let newGates = gates\r\n\r\n    const inputNodes = addNewChipTerminalNode(inputs)\r\n    const outputNodes = addNewChipTerminalNode(outputs)\r\n\r\n    newGates = { ...newGates, ...inputNodes, ...outputNodes }\r\n\r\n    setGates({ ...newGates })\r\n}\r\n\r\nexport { addGate, rotateGate, addNode, addChipTerminalNode }","import React from 'react'\r\nimport { DragLayer } from 'react-dnd'\r\n\r\nimport Nand from '../../../Gates/Nand'\r\nimport Node from '../../../Gates/Node'\r\nimport { getTerminalPoint } from '../WireHelpers'\r\n\r\nimport { useContext } from 'react'\r\nimport { WiresContext } from '../BuildContext'\r\n\r\nconst dragOpacity = 0.3\r\n\r\n// Generate preview with proper rotation and offsets from mouse cursor\r\nconst draggedGateStyle = (item, currentOffset) => {\r\n\r\n    // console.log('DragPreview > defaultStyle() : item = ', item)\r\n\r\n    const gate = document.getElementById(item.id)\r\n    // console.log('DragPreview > defaultStyle() : gate = ', gate)\r\n\r\n    const gateParent = gate.parentElement\r\n    // console.log('DragPreview > defaultStyle() : gateParent = ', gateParent)\r\n\r\n    const transform = gateParent.transform\r\n    // console.log('DragPreview > defaultStyle() : transform = ', transform)\r\n    \r\n    const rotation = transform.baseVal['1'].angle\r\n    // console.log('DragPreview > defaultStyle() : rotation = ', rotation)\r\n    \r\n    // Calculate proper offsets\r\n    //TODO: make dynamic?\r\n    let left, top\r\n    if (!item.id.includes('Node')) {\r\n        switch(rotation) {\r\n            case 0:\r\n                left = 0\r\n                top = -25\r\n                break\r\n            case 90:\r\n                left = -150\r\n                top = 75\r\n                break\r\n            case 180:\r\n                left = -200\r\n                top = -75\r\n                break\r\n            case 270:\r\n                left = -100\r\n                top = -125\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    else if (item.id.includes('Node')) {\r\n        switch(rotation) {\r\n            case 0:\r\n                left = -45\r\n                top = -45\r\n                break\r\n            case 90:\r\n                left = -150\r\n                top = 75\r\n                break\r\n            case 180:\r\n                left = -200\r\n                top = -75\r\n                break\r\n            case 270:\r\n                left = -100\r\n                top = -125\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        {\r\n            left: currentOffset.x+left,\r\n            top: currentOffset.y+top,\r\n            position: 'fixed',\r\n            opacity: dragOpacity,\r\n            transform: `rotate(${rotation}deg)`,\r\n        }\r\n    )\r\n}\r\n\r\nconst overlaySvgStyle = () => {\r\n\r\n    // Needed to imitate position of Target's svg, must be calculated here and not outside this function\r\n    const svgBbox = document.getElementById('svg').getBoundingClientRect()\r\n    const paperBbox = document.getElementById('paper').getBoundingClientRect()\r\n\r\n    //TODO: see if some of these can be placed in theme and be shared with Target svg\r\n    return (\r\n        {\r\n            opacity: dragOpacity,\r\n            // imitate Target svg border to supperpose that svg with this one perfectly\r\n            borderWidth: 3,\r\n            borderStyle: 'dashed',\r\n            borderColor: 'red',\r\n            borderRadius: 3,\r\n            // backgroundColor: 'red',\r\n            position: 'absolute',\r\n            left: svgBbox.left-paperBbox.left,\r\n            top: svgBbox.top-paperBbox.top,\r\n            zIndex: 1999,   // set original zindex in theme and then use it here + 1 ? doesn't seem to have much an effect but it also might fix pointer events while dragging\r\n            width: svgBbox.width,\r\n            height: svgBbox.height\r\n\r\n        }\r\n    )\r\n}\r\n\r\n//TODO: see if you can do without this, or maybe use ItemTypes\r\nconst gateTypes = {\r\n    'Node': Node,\r\n    'Nand': Nand\r\n}\r\n\r\nfunction getConnectedWires(gateId, wires) {\r\n    // console.log('DragPreview > getConnectedWires() : gateId = ', gateId)\r\n    // console.log('DragPreview > getConnectedWires() : wires = ', wires)\r\n\r\n    const wireIds = Object.keys(wires)\r\n    // console.log('DragPreview > getConnectedWires() : wireIds = ', wireIds)\r\n\r\n    let connectedWires = {}\r\n    wireIds.forEach(wireId => {\r\n        // console.log('DragPreview > getConnectedWires() : wireId = ', wireId)\r\n        \r\n        if (wireId.includes(gateId)) {\r\n            connectedWires[wireId] = {\r\n                from: {x: null, y: null}, \r\n                to: {x: null, y: null}\r\n            }\r\n        }\r\n\r\n    })\r\n    // console.log('DragPreview > getConnectedWires() : connectedWires = ', connectedWires)\r\n\r\n    return connectedWires\r\n}\r\n\r\nfunction moveConnectedWires(gateId, wires, currentOffset) {\r\n    // console.log('DragPreview > moveConnectedWires() : gateId = ', gateId)\r\n    // console.log('DragPreview > moveConnectedWires() : wires = ', wires)\r\n\r\n    const wireIds = Object.keys(wires)\r\n    let newWires = wires\r\n    wireIds.forEach(wireId => {\r\n\r\n        console.log('DragPreview > moveConnectedWires() : wireId = ', wireId)\r\n        \r\n        const fromId = wireId.split('_')[0]\r\n        const toId = wireId.split('_')[1]\r\n        console.log('DragPreview > moveConnectedWires() : fromId = ', fromId)\r\n        console.log('DragPreview > moveConnectedWires() : toId = ', toId)\r\n\r\n        const from = document.getElementById(fromId)\r\n        const to = document.getElementById(toId)\r\n        console.log('DragPreview > moveConnectedWires() : from = ', from)\r\n        console.log('DragPreview > moveConnectedWires() : to = ', to)\r\n\r\n        if (!from && !to) return\r\n\r\n        const fromPoint = getTerminalPoint(from)\r\n        const toPoint = getTerminalPoint(to)\r\n        console.log('DragPreview > moveConnectedWires() : fromPoint = ', fromPoint)\r\n        console.log('DragPreview > moveConnectedWires() : toPoint = ', toPoint)\r\n\r\n\r\n        const bboxGate = document.getElementById(gateId).getBoundingClientRect()\r\n        // console.log('DragPreview > moveConnectedWires() : bboxGate = ', bboxGate)\r\n\r\n        const diff = {\r\n            x: currentOffset.x-bboxGate.x, \r\n            y: currentOffset.y-bboxGate.y\r\n        }\r\n\r\n        if (fromId.includes(gateId)) {\r\n            newWires[wireId] = {\r\n                from: {x: fromPoint.x+diff.x, y: fromPoint.y+diff.y}, \r\n                to: {x: toPoint.x, y: toPoint.y}\r\n            } \r\n        }\r\n        else if (toId.includes(gateId)) {\r\n            newWires[wireId] = {\r\n                from: {x: fromPoint.x, y: fromPoint.y},\r\n                to: {x: toPoint.x+diff.x, y: toPoint.y+diff.y} \r\n            } \r\n        }           \r\n    })\r\n\r\n    return newWires\r\n}\r\n\r\n\r\nconst DragPreview = ({ isDragging, currentOffset, item }) => {\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [wires, setWires] = useContext(WiresContext)\r\n\r\n    // console.log('DragPreview : item = ', item)\r\n\r\n    let Gate\r\n    let connectedWires = {}\r\n    let draggedWires = {}\r\n    if (isDragging && currentOffset) {\r\n        const type = item.id.replace(/[0-9]/g, '')      // deduce gate type from id\r\n        // console.log('DragPreview > DragPreview() : id = ', id)\r\n        \r\n        Gate = gateTypes[type]                          // convert string to function\r\n        //TODO: see if you can do without gateTypes\r\n        // Gate = document.getElementById(item.id)  \r\n\r\n        connectedWires = getConnectedWires(item.id, wires)     // get all wires connected to currently dragged gate\r\n        // console.log('DragPreview > DragPreview() : connectedWires = ', connectedWires)\r\n    \r\n        draggedWires = moveConnectedWires(item.id, connectedWires, currentOffset)   // follow gate with all attached wires \r\n    }\r\n\r\n    // console.log('DragPreview : draggedWires = ', draggedWires)\r\n\r\n    // Only render preview while dragging and if requested (likely always the case)\r\n    return (\r\n        !isDragging || !currentOffset || !item.withDragPreview ?\r\n            null\r\n            :\r\n            <>\r\n                {/* The gate preview */}\r\n                <svg style={draggedGateStyle(item, currentOffset)}>\r\n                    <Gate id={item.id} />\r\n                </svg>\r\n\r\n                {/* The wire preview */}\r\n                {/* Overlay a copy of Target's svg */}\r\n                <svg style={overlaySvgStyle()}>\r\n                    {Object.keys(draggedWires).map(id => {\r\n                        const { from, to } = draggedWires[id]\r\n                        return (\r\n                            <line \r\n                                key={id}\r\n                                id={id}\r\n                                stroke='black' //TODO: get from theme?\r\n                                strokeWidth='3'  \r\n                                x1={from.x}\r\n                                y1={from.y}\r\n                                x2={to.x}\r\n                                y2={to.y}\r\n                                style={{ pointerEvents: 'none' }}\r\n                            />\r\n                        )\r\n                    })}\r\n                </svg>\r\n            </>\r\n    )\r\n}\r\n\r\n// The rest is react-dnd mumbo-jumbo\r\n\r\nexport default DragLayer(monitor => ({\r\n    item: monitor.getItem(),\r\n    itemType: monitor.getItemType(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging()\r\n}))(DragPreview)\r\n\r\n","export default {\r\n  BOX: 'box',\r\n  CSV: 'csv'\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// import ItemTypes from './ItemTypes'\r\nimport { DragSource } from 'react-dnd'\r\n\r\nimport Nand from '../../../Gates/Nand'\r\nimport Node from '../../../Gates/Node'\r\nimport { theme } from '../../../theme'\r\n\r\nimport ItemTypes from '../ItemTypes'\r\n\r\n//TODO: consider using general ItemTypes for this?\r\nconst gateTypes = {\r\n    [ItemTypes.CHIP_IN+ItemTypes.NODE]: Node,\r\n    [ItemTypes.CHIP_OUT+ItemTypes.NODE]: Node,\r\n    [ItemTypes.NODE]: Node,\r\n    [ItemTypes.NAND]: Nand\r\n}\r\n\r\n// Functions ran right before drag\r\nconst boxSource = {\r\n\r\n    // Gather info on dragged item\r\n    beginDrag({ id, left, top, }, monitor, component) {\r\n        console.log('Source > boxSource > beginDrag() : id = ', id)\r\n        return { id, left, top, withDragPreview: true }\r\n    },\r\n\r\n    // Don't allow gate drag while dragging floatingWire\r\n    canDrag(props, monitor) {\r\n        console.log('Source > boxSource > beginDrag() : props.floatingWire = ', props.floatingWire)\r\n        return !props.floatingWire\r\n    }\r\n}\r\n\r\n// General container for draggable gates/nodes\r\nconst Source = ({ hideSourceOnDrag, left, top, rotation, connectDragSource, isDragging, id, selected=false }) => {\r\n\r\n    console.log('Source : id = ', id)\r\n\r\n    if (isDragging && hideSourceOnDrag) return\r\n\r\n    // Ensure nodes are never rotated\r\n    if (id.includes(ItemTypes.NODE)) rotation = 0\r\n\r\n    // Adjust dragged gate position with respect to mouse cursor\r\n    //TODO: make values dynamic *maybe play around with transformOrigin more?)\r\n    switch(rotation) {\r\n        // case 0:\r\n        //     left = left\r\n        //     top = top - 50\r\n        case 90:\r\n            left = left + 95\r\n            top = top + 5\r\n            break\r\n        case 180:\r\n            left = left + 85\r\n            top = top + 100\r\n            break\r\n        case 270:\r\n            left = left - 5\r\n            top = top + 95\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    const translation = `${left} ${top}`\r\n    // console.log('Source : translation = ', translation)\r\n\r\n    const type = id.replace(/[0-9]/g, '')       // deduce gate type from id\r\n    // console.log('Source : type = ', type)\r\n\r\n    //TODO: see if you can use general ItemTypes\r\n    const Gate = gateTypes[type]                // convert string to function\r\n    // console.log('Source : Gate = ', Gate)\r\n\r\n    // console.log('Source : selected = ', selected)\r\n\r\n    // Svg tag needed only to define filter\r\n    return connectDragSource(\r\n        <svg>\r\n            {console.log('Source: connectDragSource() : id = ', id)}\r\n            {/* Define glow effect */}\r\n            <defs>\r\n                <filter id=\"glow\" x=\"-20\" y=\"0\" width=\"100%\" height=\"100%\" filterUnits=\"userSpaceOnUse\">\r\n                    <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"0\" dy=\"0\" />\r\n                    <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"10\" />\r\n                    <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\r\n                </filter>\r\n            </defs>\r\n\r\n            {/* Wrap gate with g tag to move it around and apply filter */}\r\n            <g \r\n                transform={`translate(${translation}) rotate(${rotation})`} \r\n                filter={ selected ? \"url(#glow)\" : null}\r\n            >\r\n                <Gate \r\n                    id={id} \r\n                    stroke={ selected ? theme.palette.primary.light : 'black' } \r\n                    fill={ selected ? theme.palette.primary.light : 'black' }\r\n                />\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\n// The rest is all react-dnd mumbo-jumbo\r\n\r\nSource.propTypes= {\r\n    connectDragSource: PropTypes.func.isRequired,\r\n    isDragging: PropTypes.bool.isRequired,\r\n    id: PropTypes.any.isRequired,\r\n    left: PropTypes.number.isRequired,\r\n    top: PropTypes.number.isRequired,\r\n    hideSourceOnDrag: PropTypes.bool.isRequired,\r\n    children: PropTypes.node\r\n}\r\n\r\nconst connect = (connect, monitor) => (\r\n    {\r\n        connectDragSource: connect.dragSource(),\r\n        isDragging: monitor.isDragging()\r\n    }\r\n)\r\n\r\n//TODO: see if it should really be ItemTypes.BOX, or maybe even something else?\r\nexport default DragSource(ItemTypes.CSV, boxSource, connect)(Source)","import React, { useState } from 'react'\r\nimport { theme } from '../../../theme'\r\n\r\n\r\nexport default ({ id, floatingWire, creatingNode, from, to, setCreatingNode, selected }) => {\r\n    \r\n    console.log('Wire : floatingWire = ', floatingWire)\r\n\r\n    const [strokeColor, setStrokeColor] = useState('black')\r\n\r\n    return (\r\n        <svg>\r\n            <defs>\r\n                <filter id=\"f1\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" filterUnits=\"userSpaceOnUse\">\r\n                    <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"0\" dy=\"0\" />\r\n                    <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"10\" />\r\n                    <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\r\n                </filter>\r\n            </defs>\r\n            <line \r\n                key={id}\r\n                id={id}\r\n                // stroke={\r\n                //     (floatingWire && floatingWire.includes(id)) ||\r\n                //     (creatingNode === id) ||\r\n                //     selected\r\n                //         ? 'purple' \r\n                //         : 'black'\r\n                // }  \r\n                stroke={selected ? theme.palette.primary.light : strokeColor}\r\n                opacity={floatingWire && floatingWire.name.includes(id) ? 0.3 : 1 }\r\n                strokeWidth='3' \r\n                x1={from.x}\r\n                y1={from.y}\r\n                x2={to.x}\r\n                y2={to.y}\r\n                style={{ pointerEvents: floatingWire ? 'none' : 'all', boxShadow:'10px 10px' }} //TODO: get floatingWire from Context?\r\n                onMouseOver={()=>{setCreatingNode(id); setStrokeColor(theme.palette.primary.light)}}\r\n                onMouseOut={()=>{setCreatingNode(null); setStrokeColor('black')}}\r\n                filter={ selected ? \"url(#f1)\" : null}\r\n            />\r\n        </svg>\r\n    )\r\n}","import { addGate, rotateGate, addNode } from '../GateFuncs'\r\nimport { createFloatingWire, dragFloatingWire, connectFloatingWire } from '../WireFuncs'\r\n\r\nimport ItemTypes from '../ItemTypes' \r\n\r\n// Receive new gate into drop zone\r\n//TODO: consider adding chip in and out dropzones\r\nfunction handleDrop(evt, gates, setGates) {\r\n\r\n    evt.preventDefault()    //TODO: see if necessary\r\n\r\n    let id = evt.dataTransfer.getData('text')\r\n    console.log('TargetFuncs > handleDrop() : id = ', id)\r\n\r\n    if (id.includes('new'))\r\n        addGate(evt, id, gates, setGates) //TODO: consider passing only evt and not id\r\n}\r\n\r\n// Rotate gate or add node\r\nfunction handleDoubleClick(evt, gates, setGates, wires, setWires) {\r\n        \r\n    const id = evt.target.id\r\n    console.log('TargetFuncs > handleDoubleClick() : id = ', id)\r\n\r\n    if (id.includes(ItemTypes.BODY))\r\n        rotateGate(id, gates, setGates)\r\n    else if (id.includes(ItemTypes.WIRE))\r\n        addNode(evt, gates, setGates, wires, setWires)\r\n}\r\n\r\n// Create a floating wire to be dragged onmousemove\r\nfunction handleMouseDown(evt, wires, setWires, setFloatingWire) {\r\n    \r\n    const id = evt.target.id\r\n    console.log('TargetFuncs > handleMouseDown() : id = ', id)\r\n\r\n    if (id.includes(ItemTypes.WIRE)) return\r\n\r\n    if (id.includes(ItemTypes.GATE_IN) || id.includes(ItemTypes.GATE_OUT) || id.includes(ItemTypes.CENTER))\r\n        createFloatingWire(evt, wires, setWires, setFloatingWire)\r\n}\r\n\r\n// Drag floating wire that was created onmouseup\r\nfunction handleMouseMove(evt, floatingWire, setFloatingWire) {\r\n    // console.log('TargetFuncs > handleMouseMove() : evt.target.id = ', evt.target.id)\r\n    // console.log('TargetFuncs > handleMouseMove() : state.floatingWire = ', state.floatingWire)\r\n    \r\n    if (floatingWire) \r\n        dragFloatingWire(evt, floatingWire, setFloatingWire)\r\n}\r\n\r\nfunction handleMouseUp(evt, wires, setWires, floatingWire, setFloatingWire) {\r\n       \r\n    console.log('TargetFuncs > handleMouseUp() : floatingWire = ', floatingWire)\r\n\r\n    if (floatingWire) {\r\n\r\n        const id = evt.target.id\r\n        console.log('TargetFuncs > handleMouseUp() : id = ', id)\r\n\r\n        if (id.includes(ItemTypes.GATE_IN) || id.includes(ItemTypes.GATE_OUT) || id.includes(ItemTypes.CENTER))\r\n            connectFloatingWire(evt, wires, setWires, floatingWire, setFloatingWire)\r\n        else {\r\n            console.log('TargetFuncs > handleMouseUp() : no suitable target for floating wire, removing floating wire...')\r\n            \r\n            let newWires = { ...wires }\r\n            const existingWireAtIn = floatingWire.name.split('^')[1]\r\n            delete newWires[existingWireAtIn]      \r\n            setWires(newWires)\r\n            setFloatingWire(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport { handleDrop, handleDoubleClick, handleMouseDown, handleMouseMove, handleMouseUp }","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport update from 'immutability-helper'\r\n\r\nimport ItemTypes from './ItemTypes'\r\nimport Source from './Source'\r\nimport { DropTarget } from 'react-dnd'\r\n\r\nimport Wire from './Wire'\r\n\r\nimport { theme } from '../../../theme'\r\n\r\nimport Node from '../../../Gates/Node'\r\n\r\nimport { useContext } from 'react'\r\nimport { GatesContext, WiresContext, FloatingWireContext, SelectedElementContext } from '../BuildContext'\r\n\r\n\r\nimport { \r\n    handleDrop, \r\n    handleDoubleClick, \r\n    handleMouseDown, \r\n    handleMouseMove, \r\n    handleMouseUp\r\n} from './TargetFuncs'\r\n\r\n\r\n\r\nlet percent = 0.6\r\nlet factor = 0.7\r\nconst styles = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    width: 1600*percent*factor,\r\n    height: 900*percent*factor,\r\n    borderWidth: 3,\r\n    borderStyle: 'dashed',\r\n    borderColor: theme.palette.primary.light,\r\n    borderRadius: 3,\r\n    zIndex: 1001,\r\n}\r\n\r\nconst boxTarget = {\r\n    drop(props, monitor, component) {   // component is null when using functional components so I can't do component.moveBox, needs Target to be a class so I had to workaround\r\n        const item = monitor.getItem()\r\n        const delta = monitor.getDifferenceFromInitialOffset()\r\n        const left = Math.round(item.left + delta.x)\r\n        const top = Math.round(item.top + delta.y)\r\n\r\n        moveBox(item.id, left, top)\r\n    }\r\n}\r\n\r\nlet moveBox = () => null  // global variable to rewrite in Target but used in boxTarget\r\n\r\nconst Target = ({ hideSourceOnDrag, connectDropTarget, selectedElement }) => {\r\n\r\n    const [creatingNode, setCreatingNode] = useState(null) //TODO: check if needed\r\n\r\n    const [gates, setGates] = useContext(GatesContext)\r\n    const [wires, setWires] = useContext(WiresContext)\r\n    const [floatingWire, setFloatingWire] = useContext(FloatingWireContext)\r\n    // const [floatingWire, setFloatingWire] = useState(null)  // musn't include in context because it rerenders a lot of higher components\r\n    // const [selectedElement, setSelectedElement] = useContext(SelectedElementContext)\r\n\r\n    console.log('Target : gates = ', gates)\r\n    console.log('Target : wires = ', wires)\r\n    console.log('Target : floatingWire = ', floatingWire)\r\n    console.log('Target : selectedElement = ', selectedElement)\r\n\r\n\r\n    \r\n    moveBox = (id, left, top) => {\r\n        setGates(update(gates, {\r\n            [id]: {\r\n                $merge: {\r\n                    left: left,\r\n                    top: top\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    return connectDropTarget(\r\n        <svg \r\n            id='svg' \r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={styles} \r\n            onDrop={evt=>handleDrop(evt, gates, setGates)} \r\n            onDoubleClick={evt=>handleDoubleClick(evt, gates, setGates, wires, setWires)} \r\n            onMouseDown={evt=>handleMouseDown(evt, wires, setWires, setFloatingWire)}\r\n            onMouseMove={evt=>handleMouseMove(evt, floatingWire, setFloatingWire)}\r\n            onMouseUp={evt=>handleMouseUp(evt, wires, setWires, floatingWire, setFloatingWire)}                         \r\n        >\r\n            {Object.keys(wires).map(id => {\r\n                const { from, to } = wires[id]\r\n                return (\r\n                    <Wire\r\n                        key={id}\r\n                        id={id}\r\n                        from={from}\r\n                        to={to}\r\n                        floatingWire={floatingWire}\r\n                        creatingNode={creatingNode} //TODO: check if needed\r\n                        setCreatingNode={setCreatingNode} //TODO: check if needed\r\n                        selected={selectedElement === id ? true : false}\r\n                    />\r\n                )\r\n            })}\r\n            {floatingWire &&\r\n                <line\r\n                    // id={ItemTypes.FLOATING_WIRE}\r\n                    x1={floatingWire.from.x}\r\n                    y1={floatingWire.from.y}\r\n                    x2={floatingWire.to.x}\r\n                    y2={floatingWire.to.y}\r\n                    stroke={theme.palette.primary.light}\r\n                    strokeWidth='3'\r\n                    style={{ pointerEvents: 'none' }}\r\n                />\r\n            }\r\n            {Object.keys(gates).map(id => {\r\n\r\n                const { left, top, rotation } = gates[id]\r\n                console.log('Target : id = ', id)\r\n\r\n                if (!id.includes(ItemTypes.CHIP_IN) && !id.includes(ItemTypes.CHIP_OUT)) { \r\n                    return (\r\n                        <Source \r\n                            key={id}\r\n                            id={id}\r\n                            left={left}\r\n                            top={top}\r\n                            rotation={rotation}\r\n                            floatingWire={floatingWire}   // prevents gate from being dragged while pulling terminal\r\n                            hideSourceOnDrag={hideSourceOnDrag}\r\n                            selected={selectedElement === id ? true : false}\r\n                        />\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <g \r\n                            key={id} \r\n                            transform={`translate(${left} ${top})`}\r\n                        >\r\n                            <Node \r\n                                id={id}\r\n                                stroke='black'\r\n                                fill='black'\r\n                            />\r\n                        </g>\r\n                    )\r\n                }\r\n            })}\r\n        </svg>\r\n    )\r\n}\r\n\r\n// The rest is react-dnd mumbo-jumbo\r\n\r\nTarget.propTypes = {\r\n    hideSourceOnDrag: PropTypes.bool.isRequired,\r\n    connectDropTarget: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DropTarget(ItemTypes.CSV, boxTarget, (connect, monitor) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n}))(Target)","import React from 'react'\r\n\r\nimport { DndProvider } from 'react-dnd'\r\nimport MouseBackEnd from 'react-dnd-mouse-backend'\r\n\r\nimport DragPreview from './DragPreview'\r\nimport Target from './Target'\r\n\r\n\r\nexport default ({ gates, setGates, wires, setWires, selectedElement, floatingWire, setFloatingWire }) => (\r\n    <DndProvider backend={MouseBackEnd}>\r\n        {/* <Target hideSourceOnDrag={false} gates={gates} setGates={setGates} wires={wires} setWires={setWires} selectedElement={selectedElement} floatingWire={floatingWire} setFloatingWire={setFloatingWire} /> */}\r\n        {/* <DragPreview wires={wires} /> */}\r\n        <Target hideSourceOnDrag={false} selectedElement={selectedElement} />\r\n        <DragPreview />\r\n    </DndProvider>\r\n)","import ItemTypes from './ItemTypes'\r\n\r\nfunction handleDragOver(evt) {\r\n    evt.preventDefault()\r\n    // setDragAreaVisible(true)\r\n}\r\n\r\nfunction addRemoveChipTerminal(title, chipInOuts, setChipInOuts, incDec, gates, setGates, wires, setWires) {\r\n\r\n    let newChipInOuts = { ...chipInOuts }\r\n    let numInOuts = Object.keys(chipInOuts).length\r\n    console.log('BuildFuncs > handleClick() > before : numInOuts = ', numInOuts)\r\n\r\n\r\n    const chipInOutsType = title === 'Inputs' ? ItemTypes.CHIP_IN : ItemTypes.CHIP_OUT\r\n\r\n    if (incDec === 'inc') {\r\n\r\n        if (numInOuts === 16) return\r\n\r\n        const chipInOutsName = chipInOutsType + numInOuts++\r\n        console.log('BuildFuncs > handleClick() : chipInOutsName = ', chipInOutsName)\r\n\r\n        newChipInOuts[chipInOutsName] = {\r\n            value: 0,\r\n            connectedTo: null\r\n        }\r\n    }\r\n    else if (incDec === 'dec') {\r\n\r\n        const chipInOutName = chipInOutsType + --numInOuts\r\n        console.log('BuildFuncs > handleClick() : trying to delete chipInOutName = ', chipInOutName)\r\n\r\n        delete newChipInOuts[chipInOutName]\r\n        \r\n        let newGates = { ...gates }\r\n        delete newGates[chipInOutName+'Node']\r\n\r\n        setGates(newGates)\r\n        \r\n        let newWires = { ...wires }\r\n\r\n        for (var wireId in wires) {\r\n            if (wireId.includes(chipInOutName))\r\n                delete newWires[wireId]\r\n        }\r\n        \r\n        setWires(newWires)\r\n    }\r\n\r\n    console.log('BuildFuncs > handleClick() : newChipInOuts = ', newChipInOuts)\r\n\r\n    console.log('BuildFuncs > handleClick() : setChipInOuts = ', setChipInOuts)\r\n\r\n    setChipInOuts(newChipInOuts)\r\n}\r\n\r\n// function getInputValue(chipIns) {\r\n    \r\n//     const \r\n\r\n// }\r\n\r\nfunction validateInputs(val, chipIns, setChipIns, setInputValue) {\r\n    console.log('BuildFuncs > validateInputs() : val = ', val)\r\n\r\n    const isBool = /^[0-1]+$/.test(val)\r\n    console.log('BuildFuncs > validateInputs() : isBool = ', isBool)\r\n\r\n    const isEmpty = val === ''\r\n    console.log('BuildFuncs > validateInputs() : isEmpty = ', isEmpty)\r\n\r\n    if (!isBool && !isEmpty) return\t\r\n\r\n\r\n    let newChipIns = { ...chipIns }\r\n    for (let i = 0; i < val.length; i++) {\r\n        console.log('BuildFuncs > validateInputs() : i = ', i)\r\n\r\n        // newChipIns[ItemTypes.CHIP_IN+(i+1).toString()].value = Number(val[val.length-1-i]) \r\n        newChipIns[ItemTypes.CHIP_IN+i].value = Number(val[val.length-1-i]) \r\n    }\t\r\n\r\n    setInputValue(val)\r\n    setChipIns(newChipIns)\r\n}\r\n\r\nfunction handleClick(evt, setSelectedElement) {\r\n    \r\n    let id = evt.target.id\r\n    console.log('BuildFuncs > handleClickPaper() : id = ', id)\r\n\r\n    let newSelectedElement\r\n    if (id.includes(ItemTypes.BODY) || id.includes(ItemTypes.TEXT)) {\r\n        id = id.replace(ItemTypes.BODY, '').replace(ItemTypes.TEXT, '')     //TODO: check if we can do without the above if\r\n        console.log('BuildFuncs > handleClickPaper() : id = ', id)\r\n\r\n        newSelectedElement = id\r\n    }\r\n    else if (id.includes(ItemTypes.WIRE)) {\r\n        console.log('BuildFuncs > handleClickPaper() : id = ', id)\r\n\r\n        newSelectedElement = id\r\n    }\r\n    else\r\n        newSelectedElement = null\r\n\r\n    setSelectedElement(newSelectedElement)   \r\n}\r\n\r\nfunction handleKeyDown(evt, gates, setGates, wires, setWires, selectedElement, setSelectedElement) { \r\n\r\n    // if (evt.repeat) return\r\n\r\n\r\n    console.log('BuildFuncs > handleKeyDown() : selectedElement = ', selectedElement)\r\n\r\n    // evt.preventDefault()\r\n    // evt.stopPropagation()\r\n\r\n    if (selectedElement === null) return\r\n\r\n    if (evt.keyCode === 48 || evt.keyCode === 49) return\r\n\r\n    const DEL_KEY = 46\r\n    const ESC_KEY = 27\r\n\r\n    // console.log('Target : handleKeyDown() : evt = ', evt)\r\n\r\n    const keyId = evt.keyCode\r\n    // console.log('Target : handleKeyDown() : keyId = ', keyId)\r\n\r\n    // console.log('Target : handleKeyDown() : selectedElement = ', selectedElement)\r\n\r\n    if (keyId === DEL_KEY) {\r\n\r\n        console.log('Build : handleKeyDown() : wires = ', wires)\r\n\r\n        let newWires = { ...wires }\r\n\r\n        if (selectedElement.includes('_'))\r\n            delete newWires[selectedElement]\r\n        else {\r\n            let newGates = { ...gates }\r\n            delete newGates[selectedElement]\r\n            console.log('BuildFuncs > handleKeyDown() : newGates = ', newGates)\r\n       \r\n            setGates(newGates)\r\n\r\n            const wireIds = Object.keys(wires)  \r\n            wireIds.forEach(wireId => {\r\n                if (wireId.includes(selectedElement))\r\n                    delete newWires[wireId]\r\n            })\r\n        } \r\n\r\n        console.log('BuildFuncs > handleKeyDown() : newWires = ', newWires)\r\n\r\n\r\n        setSelectedElement(null)\r\n\r\n        setWires(newWires)\r\n    }\r\n    else if (keyId === ESC_KEY)\r\n        setSelectedElement(null)\r\n}\r\n\r\n\r\nexport { handleDragOver, addRemoveChipTerminal, validateInputs, handleKeyDown, handleClick }","import React, { useState, useMemo } from 'react'\r\nimport ComponentsDrawer from './ComponentsDrawer'\r\n\r\nimport { theme } from '../../theme' \r\n\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport './Build.css'\r\n\r\n\r\n\r\nimport DnDApp from './DnD/DnDApp'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport UpArrow from '@material-ui/icons/KeyboardArrowUp'\r\nimport DownArrow from '@material-ui/icons/KeyboardArrowDown'\r\nimport Save from '@material-ui/icons/Save'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow'\r\n\r\nimport Input from '@material-ui/core/Input'\r\n\r\nimport { useContext } from 'react'\r\nimport { ChipInsContext, ChipOutsContext, GatesContext, WiresContext, SelectedElementContext } from './BuildContext'\r\n\r\n\r\nimport { handleDragOver, addRemoveChipTerminal, validateInputs, handleClick, handleKeyDown } from './BuildFuncs'\r\n\r\nimport ItemTypes from './ItemTypes'\r\n\r\nexport default () => {\r\n\r\n\tconst [shift, setShift] = useState(0)\r\n\t// const [dragAreaVisible, setDragAreaVisible] = useState(false)\r\n\r\n\t// const context = useContext(AppDataContext)\r\n\t// const { gates, setGates, wires, setWires, chipIns, setChipIns, chipOuts, setChipOuts, selectedElement, setSelectedElement } = context\r\n\t\r\n\tconst [chipIns, setChipIns] = useContext(ChipInsContext)\r\n\tconst [chipOuts, setChipOuts] = useContext(ChipOutsContext)\r\n\tconst [gates, setGates] = useContext(GatesContext)\r\n\tconst [wires, setWires] = useContext(WiresContext)\r\n\t// const [selectedElement, setSelectedElement] = useContext(SelectedElementContext)\r\n\tconst [selectedElement, setSelectedElement] = useState(null)\r\n\r\n\r\n\tconst percent = 0.6\r\n\r\n\tconst styles = {\r\n\t\theader: {\r\n\t\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\t\t// minHeight: '90vh',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'top',\r\n\t\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t\tmarginLeft: shift,\r\n\t\t\tpaddingTop: 30,\r\n\t\t},\r\n\t\theaderTitle: {\r\n\t\t\tfontSize: 'calc(14px + 2vmin)',\r\n\t\t\ttextShadow: '-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black',\r\n\t\t\tposition: 'relative',\r\n\t\t\ttop: '-35px',\r\n\t\t},\r\n\t\theaderSubtitle: {\r\n\t\t\tfontSize: 'calc(6px + 2vmin)',\r\n\t\t\tposition: 'relative',\r\n\t\t\ttop: '-55px',\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\t// top: -30, \r\n\t\t\twidth: 1600*percent, \r\n\t\t\theight: 900*percent, \r\n\t\t\tposition: 'relative', \r\n\t\t\t// zIndex: 9999, \r\n\t\t\tdisplay: 'flex', \r\n\t\t\talignItems: 'center', \r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tmarginTop: 5,\r\n\t\t\tmarginBottom: 5,\r\n\t\t},\r\n\t}\t\r\n\t\r\n\tconst Row = ({ columns }) => (\r\n\t\t<Grid container spacing={0} justify='space-around' alignItems='center'\r\n\t\tonClick={evt=>handleClick(evt, setSelectedElement)}\r\n\t\t\t\t\tonKeyDown={evt=>handleKeyDown(evt, gates, setGates, wires, setWires, selectedElement, setSelectedElement)} \r\n\t\t\t\t    // tabIndex=\"0\"\r\n\t\t>\r\n\t\t\t<Grid item className='viewGridMed' md={3} children={columns[0]} style={{ pointerEvents: columns[0].props.type === 'Inputs' ? 'none' : 'all' }} />\r\n\t\t\t<Grid item className='viewGridMed' md={6} children={columns[1]} />\r\n\t\t\t<Grid item className='viewGridMed' md={3} children={columns[2]} style={{ pointerEvents: columns[2].props.type === 'Outputs' ? 'none' : 'all' }} />\r\n\t\t</Grid>\r\n\t)\r\n\r\n\r\n\t\r\n\r\n\tconst TerminalHeadings = ({ title, chipInOuts, setChipInOuts }) => (\r\n\t\t<Grid container justify='center' alignItems='center' spacing={2}>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Grid container direction='column' justify='center'>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\t\tchildren={<UpArrow fontSize='small' />} \r\n\t\t\t\t\t\t\tsize='small' \r\n\t\t\t\t\t\t\tonClick={()=>addRemoveChipTerminal(title, chipInOuts, setChipInOuts, 'inc', gates, setGates, wires, setWires)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{Object.keys(chipInOuts).length}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\t\tchildren={<DownArrow fontSize='small' />} \r\n\t\t\t\t\t\t\tsize='small' \r\n\t\t\t\t\t\t\tonClick={()=>addRemoveChipTerminal(title, chipInOuts, setChipInOuts, 'dec', gates, setGates, wires, setWires)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item>{title}</Grid>\r\n\t\t</Grid>\r\n\t) \r\n\r\n\tconst Inputs = ({ name }) => {\r\n\r\n\t\tfunction handleMouseUpIn(inputName) {\r\n\r\n\t\t\tconst floatingWireName = localStorage.getItem('floatingWireName')\r\n\t\t\tconsole.log('Build > Inputs > handleMouseUpIn() : floatingWireName = ', floatingWireName)\r\n\r\n\t\t\tlet newChipIns = { ...chipIns }\r\n\t\t\tconsole.log('Build > Inputs > handleMouseUpIn() : newChipIns = ', newChipIns)\r\n\t\t\tconsole.log('Build > Inputs > handleMouseUpIn() : inputName = ', inputName)\r\n\t\t\tconsole.log('Build > Inputs > handleMouseUpIn() : newChipIns[inputName] = ', newChipIns[inputName])\r\n\r\n\t\t\tnewChipIns[inputName].connectedTo = floatingWireName.replace('floatingWire_', '')\r\n\r\n\t\t\tsetChipIns(newChipIns)\r\n\t\t}\r\n\r\n\t\tconst [strokeColor, setStrokeColor] = useState('black')\r\n\r\n\t\tconsole.log('Build > Inputs : name = ', name)\r\n\r\n\t\treturn (\r\n\t\t\t<svg width='100' height='12' viewBox='0 0 100 10'>\r\n\t\t\t\t<text                \r\n\t\t\t\t\t// id={id+'Text'}\r\n\t\t\t\t\t// strokeWidth='1'\r\n\t\t\t\t\tx={name.length === 3 ? '12' : '6'} y='80%' \r\n\t\t\t\t\tfontSize='11' \r\n\t\t\t\t\t// fontWeight='100'\r\n\t\t\t\t\tfill='grey'  \r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</text>\r\n\t\t\t\t<text                \r\n\t\t\t\t\t// id={id+'Text'}\r\n\t\t\t\t\t// strokeWidth='1'\r\n\t\t\t\t\tx='40' y='80%' \r\n\t\t\t\t\tfontSize='12' \r\n\t\t\t\t\t// fontWeight='100'\r\n\t\t\t\t\tfill='white'  \r\n\t\t\t\t>\r\n\t\t\t\t\t{chipIns[name].value}\r\n\t\t\t\t</text>\r\n\t\t\t\t<line \r\n\t\t\t\t\tid={name} \r\n\t\t\t\t\tx1='60' y1='5' x2='100' y2='5' \r\n\t\t\t\t\tstroke={strokeColor}\r\n\t\t\t\t\tstrokeWidth='5'\r\n\t\t\t\t\tpointerEvents='all'\r\n\t\t\t\t\tonMouseOver={()=>setStrokeColor(theme.palette.primary.light)}\r\n\t\t\t\t\tonMouseOut={()=>setStrokeColor('black')}\r\n\t\t\t\t\tonMouseUp={()=>handleMouseUpIn(name)}\r\n\t\t\t\t/>  \r\n\t\t\t</svg>\r\n\t\t)\r\n\t}\r\n\r\n\tconst Outputs = ({ name }) => {\r\n\t\tconst [strokeColor, setStrokeColor] = useState('black')\r\n\r\n\t\treturn (\r\n\t\t\t<svg width='100' height='12' viewBox='0 0 100 10'>\r\n\t\t\t\t<line \r\n\t\t\t\t\tid={name} \r\n\t\t\t\t\tx1='0' y1='5' x2='40' y2='5' \r\n\t\t\t\t\tstroke={strokeColor}\r\n\t\t\t\t\tstrokeWidth='5'\r\n\t\t\t\t\tpointerEvents='all'\r\n\t\t\t\t\tonMouseOver={()=>setStrokeColor(theme.palette.primary.light)}\r\n\t\t\t\t\tonMouseOut={()=>setStrokeColor('black')}\r\n\t\t\t\t\t\t\t\t\t/>  \r\n\t\t\t\t<text                \r\n\t\t\t\t\t// id={id+'Text'}\r\n\t\t\t\t\t// strokeWidth='1'\r\n\t\t\t\t\tx={name.length === 4 ? '57' : '52'} y='80%' \r\n\t\t\t\t\tfontSize='11' \r\n\t\t\t\t\t// fontWeight='100'\r\n\t\t\t\t\tfill='grey'  \r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</text>\r\n\t\t\t\t<text                \r\n\t\t\t\t\t// id={id+'Text'}\r\n\t\t\t\t\t// strokeWidth='1'\r\n\t\t\t\t\tx='92' y='80%' \r\n\t\t\t\t\tfontSize='12' \r\n\t\t\t\t\t// fontWeight='100'\r\n\t\t\t\t\tfill='white'  \r\n\t\t\t\t>\r\n\t\t\t\t\t{chipOuts[name].value}\r\n\t\t\t\t</text>\r\n\t\t\t</svg>\r\n\t\t)\r\n\t}\r\n\r\n\tconst Terminals = ({ chipInOuts }) => (\r\n\t\t<Grid container direction='column' justify='center' alignItems='center' className='viewGridMed'>\r\n\t\t\t{Object.keys(chipInOuts).map(child => \r\n\t\t\t\t<Grid item \r\n\t\t\t\t\tclassName='viewGridSmall' \r\n\t\t\t\t\tkey={child} \r\n\t\t\t\t\tchildren={ \r\n\t\t\t\t\t\tObject.keys(chipInOuts)[0].includes(ItemTypes.CHIP_IN) \r\n\t\t\t\t\t\t\t? <Inputs name={child} /> \r\n\t\t\t\t\t\t\t: <Outputs name={child} /> \r\n\t\t\t\t\t} \r\n\t\t\t\t/>)}\r\n\t\t</Grid>\r\n\t)\r\n\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\r\n\t\r\n\tconst TerminalValues = ({ title }) => {\r\n\r\n\t\tif (title === 'Inputs') {\r\n\t\t\tconst inputsVals = Object.values(chipIns)\r\n\t\t\tconst numInputs = inputsVals.length\r\n\r\n\t\t\treturn <Input autoFocus inputProps={{ style: {textAlign: 'center', color: inputValue.length < numInputs ? 'grey' : 'white' }, maxLength: numInputs }} value={inputValue} onChange={evt=>validateInputs(evt.target.value, chipIns, setChipIns, setInputValue)}></Input> \r\n\t\t}\r\n\t\telse if (title === 'Outputs') {\r\n\r\n\t\t\tlet val = ''\r\n\t\t\tconst outputsVals = Object.values(chipOuts)\r\n\t\t\tconst numOutputs = outputsVals.length\r\n\r\n\t\t\tfor (let i = 0; i < numOutputs; i++) \r\n\t\t\t\tval = val.concat(outputsVals[numOutputs-1-i].value)\r\n\r\n\t\t\tconsole.log('Build > TerminalValues : val = ', val)\r\n\r\n\t\t\treturn <Input readOnly inputProps={{ style: {textAlign: 'center'} }} value={val}></Input>\r\n\t\t}\r\n\t}\r\n\r\n\tconst SaveButton = () => (\r\n\t\t<IconButton children={<Save fontSize='large' />} onClick={()=>console.log('trying to save...')} />\r\n\t)\r\n\r\n\tconst PlayButton = () => (\r\n\t\t<IconButton children={<PlayArrow fontSize='large' />} onClick={()=>console.log('trying to run...')} />\r\n\t)\r\n\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // useEffect(()=>updateWires(wires, setWires), [gates, inputs])\r\n\r\n\t// // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t// useEffect(() => addChipTerminalNode(chipIns, chipOuts, gates, setGates), [chipIns, chipOuts])\r\n\t\r\n\r\n\t// console.log('Build : context = ', context)\r\n\tconsole.log('Build : chipIns = ', chipIns)\r\n\tconsole.log('Build : gates = ', gates)\r\n\tconsole.log('Build : wires = ', wires)    \r\n\tconsole.log('Build : selectedElement = ', selectedElement)\r\n\r\n\r\nreturn useMemo(()=>{\r\n\treturn (\r\n\t\t// <BuildContextProvider>\r\n\t\t\t<div \r\n\t\t\t\tstyle={styles.header} \r\n\t\t\t\tonDragOver={handleDragOver} \r\n\t\t\t\t// onClick={evt=>handleClick(evt, setSelectedElement)}\r\n\t\t\t>\r\n\t\t\t\t<ComponentsDrawer setShift={setShift} />\r\n\t\t\t\t<Paper \r\n\t\t\t\t\tid='paper' \r\n\t\t\t\t\tstyle={styles.paper} \r\n\t\t\t\t\t\r\n\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid container direction='column' justify='space-between' spacing={0} className='viewGridLarge' style={{ height: \"100%\", paddingBottom: 20, paddingTop: 7 }}>\r\n\t\t\t\t\t\t<Row \r\n\t\t\t\t\t\t\tcolumns={[\r\n\t\t\t\t\t\t\t\t<TerminalHeadings title='Inputs' chipInOuts={chipIns} setChipInOuts={setChipIns} />,\r\n\t\t\t\t\t\t\t\t<SaveButton />, \r\n\t\t\t\t\t\t\t\t<TerminalHeadings title='Outputs' chipInOuts={chipOuts} setChipInOuts={setChipOuts} />\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t// \t\tonClick={evt=>handleClick(evt, setSelectedElement)}\r\n\t\t\t\t\t// onKeyDown={evt=>handleKeyDown(evt, gates, setGates, wires, setWires, selectedElement, setSelectedElement)} \r\n\t\t\t\t    // tabIndex=\"0\" \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Row \r\n\t\t\t\t\t\t\tcolumns={[\r\n\t\t\t\t\t\t\t\t<Terminals type='Inputs' chipInOuts={chipIns} />,\r\n\t\t\t\t\t\t\t\t<DnDApp selectedElement={selectedElement} />, \r\n\t\t\t\t\t\t\t\t<Terminals type='Outputs' chipInOuts={chipOuts} />\r\n\t\t\t\t\t\t\t]} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Row columns={[<TerminalValues title='Inputs' />, <PlayButton />, <TerminalValues title='Outputs' />]} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</div>\r\n\t\t// </BuildContextProvider>\r\n\t)\r\n}, [gates, wires, chipIns, chipOuts, selectedElement])\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport { theme } from './theme' \r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n// import App from './Routes/Build/DnD/App'\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <App />\r\n    </MuiThemeProvider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\r\n\r\nimport LandingPage from './Routes/LandingPage'\r\nimport LoginForm from './Routes/Auth/LoginForm'\r\nimport LogoutForm from './Routes/Auth/LogoutForm'\r\nimport RegisterForm from './Routes/Auth/RegisterForm'\r\nimport RegisterConf from './Routes/Auth/RegisterConf'\r\nimport ResetForm from './Routes/Auth/ResetForm'\r\nimport ResetConf from './Routes/Auth/ResetConf'\r\nimport PrivateRoute from './Routes/PrivateRoute'\r\nimport Home from './Routes/Home'\r\nimport Build from './Routes/Build/Build'\r\n\r\n\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport HotTubIcon from '@material-ui/icons/HotTub'\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint'\r\nimport HelpIcon from '@material-ui/icons/Help'\r\nimport AddIcon from '@material-ui/icons/AddCircle'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { theme } from './theme'\r\n\r\nimport { BuildContextProvider } from './Routes/Build/BuildContext'\r\n\r\n\r\nexport default () => {\r\n\r\n\tconst [isAuthenticated, setIsAuthenticated] = useState(localStorage.getItem('authenticated'))\r\n\r\n\tconst AppBarSmart = () => {\r\n\r\n\t\tconst [tabValue, setTabValue] = useState(window.location.pathname)\r\n\r\n\t\tconst tabGroup1 = isAuthenticated ? ['/home', '/build'] : ['/about']\r\n\t\tconst tabGroup2 = isAuthenticated ? ['/about', '/logout'] : ['/login', '/register']\r\n\r\n\t\tconst AuthTabs1 = () => (\r\n\t\t\t<Tabs value={window.location.pathname === tabValue && tabGroup1.includes(window.location.pathname) ? tabValue : false} onChange={(event, value) => setTabValue(value)}>\r\n\t\t\t\t<Tab icon={<HomeIcon />} value='/home' label=\"Home\" component={Link} to=\"/home\" />\r\n\t\t\t\t<Tab icon={<AddIcon />} value='/build' label=\"Build\" component={Link} to=\"/build\" />\r\n\t\t\t</Tabs>\r\n\t\t)\r\n\r\n\t\tconst AuthTabs2 = () => (\r\n\t\t\t<Tabs value={window.location.pathname === tabValue && tabGroup2.includes(window.location.pathname) ? tabValue : false} onChange={(event, value) => setTabValue(value)}>\r\n\t\t\t\t<Tab icon={<HelpIcon />} value='/about' label=\"About Me\" component={Link} to=\"/about\" />\r\n\t\t\t\t<Tab icon={<CloseIcon />} value='/logout' label=\"Log Out\" component={Link} to=\"/logout\" />\r\n\t\t\t</Tabs>\r\n\t\t)\r\n\t\t\r\n\t\tconst NoAuthTabs1 = () => (\r\n\t\t\t<Tabs value={window.location.pathname === tabValue && tabGroup1.includes(window.location.pathname) ? tabValue : false} onChange={(event, value) => setTabValue(value)}>\r\n\t\t\t\t<Tab icon={<HelpIcon />} value='/about' label=\"About Me\" component={Link} to=\"/about\" />\r\n\t\t\t</Tabs>\r\n\t\t)\r\n\r\n\t\tconst NoAuthTabs2 = () => (\r\n\t\t\t<Tabs value={window.location.pathname === tabValue && tabGroup2.includes(window.location.pathname) ? tabValue : false} onChange={(event, value) => setTabValue(value)}>\r\n\t\t\t\t<Tab icon={<FingerprintIcon />} value='/login' label=\"Log In\" component={Link} to=\"/login\" />\r\n\t\t\t\t<Tab icon={<HotTubIcon />} value='/register' label=\"Register\" component={Link} to=\"/register\" />\r\n\t\t\t</Tabs>\r\n\t\t)\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<AppBar>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Grid container justify='flex-start'>\r\n\t\t\t\t\t\t{!isAuthenticated ? <NoAuthTabs1 /> : <AuthTabs1 />}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container justify='flex-end'>\r\n\t\t\t\t\t\t{!isAuthenticated ? <NoAuthTabs2 /> : <AuthTabs2 />}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (    \r\n\t\t// <Router style={styles.div}>\r\n\t\t<Router>\r\n\t\t\t<AppBarSmart />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/' component={!isAuthenticated ? LandingPage : Home} />\r\n\t\t\t\t<Route exact path='/login' render={(props) => <LoginForm {...props} setIsAuthenticated={setIsAuthenticated} />} />\r\n\t\t\t\t<Route path=\"/register\" component={RegisterForm} />\r\n\t\t\t\t<Route path='/registerConfirmed' component={RegisterConf} />\r\n\t\t\t\t<Route path='/reset' component={ResetForm} />\r\n\t\t\t\t<Route path='/resetConfirmed' component={ResetConf} />\r\n\t\t\t\t{/* <Route path='/about' render={(props) => <Redirect {...props} to='https://cv.jsalaz1989.now.sh/' />} /> */}\r\n\t\t\t\t<Route path='/about' component={() => {window.location.href = 'https://cv.jsalaz1989.now.sh/'; return null;}}/>\r\n\t\t\t\t<PrivateRoute path='/home' component={Home} isAuthenticated={isAuthenticated} />\r\n\t\t\t\t{/* <PrivateRoute path='/build' component={Build} isAuthenticated={isAuthenticated}/> */}\r\n\t\t\t\t<Route exact path='/build' render={(props) => <BuildContextProvider {...props}><Build {...props} /></BuildContextProvider>} />\r\n\t\t\t\t<PrivateRoute path='/logout' component={LogoutForm} isAuthenticated={isAuthenticated}/>\r\n\t\t\t</Switch>\r\n\t\t\t<Typography color='textSecondary' align='center' className='foot' style={{ backgroundColor: theme.palette.primary.main }}>j++ &copy; 2019</Typography>\r\n        </Router>\r\n    )\r\n}"],"sourceRoot":""}